<?xml version="1.0" encoding="utf-8"?>
<!-- generator="Joomla! - Open Source Content Management" -->
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Windows</title>
		<description><![CDATA[Project website for OpenSceneGraph]]></description>
		<link>https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows</link>
		<lastBuildDate>Wed, 07 Feb 2024 17:03:34 +0000</lastBuildDate>
		<generator>Joomla! - Open Source Content Management</generator>
		<atom:link rel="self" type="application/rss+xml" href="https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows?format=feed&amp;type=rss"/>
		<language>en-gb</language>
		<managingEditor>robert@openscenegraph.com (OpenSceneGraph)</managingEditor>
		<item>
			<title>Compiling with Cygwin </title>
			<link>https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/112-compiling-with-cygwin</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/112-compiling-with-cygwin</guid>
			<description><![CDATA[<h3 id="content" class="wiki"> </h3>
<p>Follows are details on usage of OpenSceneGraph such as how to get things compiling using Cygwin.</p>
<p>The following assumes that the OpenSceneGraph and its dependencies downloaded, either from github or tarballs, and installed under a common parent directory. I will call this "<tt>/development</tt>".</p>
<h3 id="LoadtheproperversionoftheGCCCompiler">Load the proper version of the GCC Compiler<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/Cygwin#LoadtheproperversionoftheGCCCompiler" title="Link to this section"> </a></h3>
<p>The current default gcc compiler version distributed with Cygwin is 3.4.1. Unfortunately, this version has problems dealing with the complexity of the <a class="wiki" href="https://www.openscenegraph.com/projects/osg/wiki/OpenSceneGraph">OpenSceneGraph.</a> The libraries will compile, but they will not r</p>
<p>un. To build OSG you need to manually direct the cygwin installer to load version 3.3.3 of the gcc compiler family.</p>
<h3>Compiling OpenSceneGraph<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/Cygwin#CompilingOpenSceneGraph" title="Link to this section">:</a></h3>
<pre class="wiki">$ cd /development/OpenSceneGraph
</pre>
<pre class="wiki">$ cmake .
$ make
$ make install
</pre>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>Windows</category>
			<pubDate>Wed, 06 Feb 2013 20:48:31 +0000</pubDate>
		</item>
		<item>
			<title>Older Visual Studio Versions</title>
			<link>https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/39-older-visual-studio-versions</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/39-older-visual-studio-versions</guid>
			<description><![CDATA[<h2><strong>Compiling with Visual Studio 6.0</strong><a class="anchor" href="http://www.openscenegraph.org/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio/OlderVSVersions#CompilingwithVisualStudio6.0" title="Link to this section" style="color: #d7d7d7; border: none; font-size: 0.8em; vertical-align: text-top; visibility: hidden;"></a></h2>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">With the advent of Visual Studio Express (see above), going through all the hoops required to get OpenSceneGraph to compile on Visual Studio 6.0 seems a lot less appealing. It's probably a lot easier to just install VS Express and use that. You get a free, up-to-date compiler and development environment in which you can work, and you don't need to worry about VS 6's issues. Nonetheless, instructions to get OpenSceneGraph to compile in Visual Studio 6.0 follow.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">VS 6 has poor support for STL templates. You must obtain STLport <a href="http://www.stlport.org/download.html">http://www.stlport.org/download.html</a> or equivalent (such as dinkumware's replacement at <a href="http://www.dinkumware.com/">http://www.dinkumware.com/</a> which I have not tested).</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;"> </p>
<h2 style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;"><strong>STLport instructions</strong></h2>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Please use <strong>STLport-4.5</strong>, since earlierer and newer versions cause more or less problems!!! <br />You only need the header files supplied with stlport - no need to compile or edit the code installed, with the following exception:</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Edit stlport/stl_user_config.h at about line 45 (your's may vary) and comment _IN_ (should be commented _OUT_ by default)</p>
<pre class="wiki" style="background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding-top: 0.25em; padding-right: 0.25em; padding-bottom: 0.25em; overflow: auto; font-size: 13px; line-height: normal;"># define _STLP_NO_OWN_IOSTREAMS     1
</pre>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Set the include file paths (under tools Options..., subtab Directories) to include the stlport include directory, and raise this directory up the list of include search paths (or else MS's old and non-useful stl will be used first). This is a good opportunity to add the Openthreads &amp; Producer include file paths as well since they will be used by many projects.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">The Directories tab can also be used to set search path for libraries - set these to include Producer &amp; Openthreads.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;"> </p>
<h2><strong>Building OpenSceneGraph 1.2</strong><a class="anchor" href="http://www.openscenegraph.org/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio/OlderVSVersions#BuildingOpenSceneGraph1.2" title="Link to this section" style="color: #d7d7d7; border: none; font-size: 0.8em; vertical-align: text-top; visibility: hidden;"></a></h2>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">The .dsp files included with the 1.2 versions of OpenSceneGraph, Producer, and OpenThreads have some settings that are not compatible with VS 6, in order to enable 64 bit builds in VS 8. These settings must be changed, prior to building with VS 6, by replacing all instances of:</p>
<ul style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">
<li><tt>$(PlatformName)</tt> with <tt>win32</tt>, and</li>
<li><tt>$(ConfigurationName)</tt> with <tt>Debug</tt> or <tt>Release</tt> as appropriate.</li>
</ul>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">A Perl script is in <tt>OpenSceneGraph/VisualStudio/fixup-vc6-dsps.pl</tt> to perform these changes automatically. Run it using either Windows or Cygwin Perl.</p>]]></description>
			<author>thomas.hogarth@gmail.com (Thomas Hogarth)</author>
			<category>Windows</category>
			<pubDate>Thu, 17 May 2012 05:44:16 +0000</pubDate>
		</item>
		<item>
			<title>Visual Studio Plugins</title>
			<link>https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/38-visual-studio-plugins</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/38-visual-studio-plugins</guid>
			<description><![CDATA[<div class="wikipage searchable" style="padding-left: 18px; color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; line-height: normal;">
<h1 id="VisualStudioPlugins" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; letter-spacing: -0.018em; page-break-after: avoid; font-size: 19px; margin: 0.15em 1em 0.5em -18px;">Visual Studio Plugins</h1>
<p style="font-size: 13px;"> </p>
<p><a href="https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/37-visual-studio">back to Visual Studio</a></p>
<h2 id="VRMLplugin" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 16px; margin-left: -18px;">VRML plugin<a class="anchor" href="http://www.openscenegraph.org/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins#VRMLplugin" title="Link to this section" style="color: #d7d7d7; border: none; font-size: 0.8em; vertical-align: text-top; visibility: hidden;"></a></h2>
<p style="font-size: 13px;">The VRML plugin uses <a href="http://openvrml.sourceforge.net/">OpenVRML</a>. Under Windows, it can only be compiled using version 0.14.3 of OpenVRML, because later versions depend on boost and had incompatible code changes. Note also that these instructions were tested with Visual C++ Express 2005, and some parts may differ if you are using a different version.</p>
<p style="font-size: 13px;">Download <a href="http://sourceforge.net/project/downloading.php?groupname=artoolkit&amp;filename=OpenVRML-0.14.3-win32.zip">this package</a>. Note that it contains precompiled libraries, but we cannot use those and must recompile them.</p>
<p style="font-size: 13px;">Open</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">...\OpenVRML\src\openvrml-0.14.3\ide-projects\Windows\VisualC7\OpenVRML\OpenVRML.sln
</pre>
<p style="font-size: 13px;">The OSG VRML plugin does not need OpenVRML's <tt>openvrml-gl</tt> library, nor the <tt>lookat</tt> application. Just delete those projects from the solution.</p>
<p style="font-size: 13px;">Then, select Debug mode, and change the Librarian - General - Output File property of each one of the 3 projects to add a 'd' at the end of the name, before the period. So openvrml.lib becomes openvrmld.lib and so on. Release mode will not be changed. That way, the debug and release libs can coexist in the same directory.</p>
<p style="font-size: 13px;">Pressing F7, apart from loads of warnings, you will get some errors:</p>
<p style="font-size: 13px;">Token.hpp line 76: replace this line</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">inline operator&lt;(RefToken l,RefToken r); //{return true;}
</pre>
<p style="font-size: 13px;">with this</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">inline bool operator&lt;(RefToken l,RefToken r); //{return true;}
</pre>
<p style="font-size: 13px;">AST.hpp line 151: same thing - replace this line</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">inline operator&lt;(RefAST l,RefAST r); // {return true;}
</pre>
<p style="font-size: 13px;">with this</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">inline bool operator&lt;(RefAST l,RefAST r); // {return true;}
</pre>
<p style="font-size: 13px;">And finally, in regerror.c, we have an old-style C function definition:</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">size_t
regerror(errcode, preg, errbuf, errbuf_size)
int errcode;
const regex_t *preg;
char *errbuf;
size_t errbuf_size;
{
</pre>
<p style="font-size: 13px;">replace it with</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">size_t
regerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size)\\
{
</pre>
<p style="font-size: 13px;">And then all should compile correctly (though with quite a few warnings). Change to Release mode and press F7 again to compile the libs in release mode.</p>
<p style="font-size: 13px;">Once that's done, create a directory under the main OpenVRML directory (for example, <tt>...\OpenVRML\home-built </tt>), copy the <tt>...\OpenVRML\include</tt> directory into it, and copy the three libraries you just compiled into a lib subdirectory (<tt>...\OpenVRML\home-built\lib</tt> for example):</p>
<pre class="wiki" style="font-size: 13px; background-color: #f7f7f7; border: 1px solid #d7d7d7; margin: 1em 1.75em; padding: 0.25em; overflow: auto;">...\OpenVRML\src\openvrml-0.14.3\ide-projects\Windows\VisualC7\OpenVRML\antlr\Release\antlr.lib
...\OpenVRML\src\openvrml-0.14.3\ide-projects\Windows\VisualC7\OpenVRML\openvrml\Release\openvrml.lib
...\OpenVRML\src\openvrml-0.14.3\ide-projects\Windows\VisualC7\OpenVRML\regex\Release\regex.lib
...\OpenVRML\src\openvrml-0.14.3\ide-projects\Windows\VisualC7\OpenVRML\antlr\Debug\antlrd.lib
...\OpenVRML\src\openvrml-0.14.3\ide-projects\Windows\VisualC7\OpenVRML\openvrml\Debug\openvrmld.lib
...\OpenVRML\src\openvrml-0.14.3\ide-projects\Windows\VisualC7\OpenVRML\regex\Debug\regexd.lib]
</pre>
<p style="font-size: 13px;">Then, the OSG part. Rerun CMakeSetup with the top-level CMakeLists.txt, specifying the <tt>...\OpenVRML\home-built\include</tt> directory in <tt>OPENVRML_INCLUDE_DIR</tt> and <tt>...\OpenVRML\home-built\lib\openvrml.lib</tt> library in OPENVRML_LIBRARY. Configure, then Generate as usual.</p>
<p style="font-size: 13px;">Finally, build using the newly generated solution and project files. All should go well in both Release and Debug modes (though again, many warnings will be issued, courtesy of OpenVRML's header files).</p>
<p style="font-size: 13px;"><strong>Note</strong>: 2007/07/06 - The CMake files have not yet been updated to link to the debug OpenVRML libs when compiling OSG in debug mode. For now, in the debug configuration, manually change the lib names in "Plugins vrml" project Properties - Linker - Input - Additional Dependencies (replace antlr.lib with antlrd.lib, regex.lib with regexd.lib and openvrml.lib with openvrmld.lib). This should be fixed shortly.</p>
<p style="font-size: 13px;"><strong>Note:</strong> the VRML plugin only supports geometry with geometry nodes, so for instance Box or Sphere nodes will not display anything. You can use <a class="attachment" href="http://www.openscenegraph.org/projects/osg/attachment/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins/vrml_sample.zip" title="Attachment 'vrml_sample.zip' in Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">this file</a> to test that it works. If you see a plane, a sphere, a pyramid, a rectangular prism, a cone and a teapot, it works.</p>
<h2 id="QuickTimeplugin" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 16px; margin-left: -18px;">QuickTime plugin<a class="anchor" href="http://www.openscenegraph.org/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins#QuickTimeplugin" title="Link to this section" style="color: #d7d7d7; border: none; font-size: 0.8em; vertical-align: text-top; visibility: hidden;"></a></h2>
<p style="font-size: 13px;">Download the QuickTime SDK from <a href="http://developer.apple.com/sdk/">this page</a>. Install it wherever you want, and then in !CMakeSetup specify the [...\QuickTime <a href="http://www.openscenegraph.org/projects/osg/wiki/QuickTime" rel="nofollow"></a>SDK\CIncludes] directory in <tt>QUICKTIME_INCLUDE_DIR</tt>, and <tt>...\QuickTime SDK\Libraries\QTMLClient.lib</tt> in <tt>QUICKTIME_LIBRARY</tt>. Configure, Generate and build.</p>
<h2 id="wxWidgetsforosgviewerwx" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 16px; margin-left: -18px;">wxWidgets (for osgviewerwx)<a class="anchor" href="http://www.openscenegraph.org/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins#wxWidgetsforosgviewerwx" title="Link to this section" style="color: #d7d7d7; border: none; font-size: 0.8em; vertical-align: text-top; visibility: hidden;"></a></h2>
<p style="font-size: 13px;">Download <a href="http://prdownloads.sourceforge.net/wxwindows/wxMSW-2.8.4-Setup.exe">this installer</a> or <a href="http://prdownloads.sourceforge.net/wxwindows/wxMSW-2.8.4.zip">the zip version</a>. Install or unzip wherever you want. Open ...\wxWidgets-2.8.4\build\msw\wx.dsw, converting the project files when asked. Press F7 to build.</p>
<p style="font-size: 13px;">In CMakeSetup, specify the <tt>...\wxWidgets-2.8.4\</tt> directory in <tt>wxWidgets_ROOT_DIR</tt>, <tt>...\wxWidgets-2.8.4\lib\vc_lib</tt> in wxWidgets_LIB_DIR and set wxWidgets_CONFIGURATION as "<tt>msw</tt>" and wxWidgets_USE_REL_AND_DEBUG to "<tt>ON</tt>". Configure, Generate and build.</p>
<h2 id="Colladaplugin" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 16px; margin-left: -18px;">Collada plugin<a class="anchor" href="http://www.openscenegraph.org/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins#Colladaplugin" title="Link to this section" style="color: #d7d7d7; border: none; font-size: 0.8em; vertical-align: text-top; visibility: hidden;"></a></h2>
<p style="font-size: 13px;">The Collada plugin is very easy to build now. Please see <a class="wiki" href="http://www.openscenegraph.org/projects/osg/wiki/Support/KnowledgeBase/Collada" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">the Collada plugin page</a> for instructions.</p>
<h2 id="TODO:Instructionsforotherpluginsgohere" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 16px; margin-left: -18px;">TODO: Instructions for other plugins go here<a class="anchor" href="http://www.openscenegraph.org/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins#TODO:Instructionsforotherpluginsgohere" title="Link to this section" style="color: #d7d7d7; border: none; font-size: 0.8em; vertical-align: text-top; visibility: hidden;"></a></h2>
</div>
<h3 style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; page-break-after: avoid; font-size: 14px; color: #000000; line-height: normal;">Attachments</h3>
<ul style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">
<li><a href="http://www.openscenegraph.org/projects/osg/attachment/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins/vrml_sample.zip" title="View attachment" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">vrml_sample.zip</a> (<span title="37338 bytes">36.5 kB</span>) - added by <em>martin</em> <a class="timeline" href="http://www.openscenegraph.org/projects/osg/timeline?from=2007-07-11T17%3A35%3A37Z%2B0200&amp;precision=second" title="2007-07-11T17:35:37Z+0200 in Timeline" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">5 years</a> ago.</li>
<li><a href="http://www.openscenegraph.org/projects/osg/attachment/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins/vrml_models_from_OpenDx.zip" title="View attachment" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">vrml_models_from_OpenDx.zip</a> (<span title="671858 bytes">0.6 MB</span>) - added by <em>osg</em> <a class="timeline" href="http://www.openscenegraph.org/projects/osg/timeline?from=2007-08-23T19%3A31%3A51Z%2B0200&amp;precision=second" title="2007-08-23T19:31:51Z+0200 in Timeline" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">5 years</a> ago. <q>Two .wrl files output from the Scientific Visualizaton Program OpenDX</q></li>
<li><a href="http://www.openscenegraph.org/projects/osg/attachment/wiki/Support/PlatformSpecifics/VisualStudio/VisualStudioPlugins/vrml_sample2.zip" title="View attachment" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">vrml_sample2.zip</a> (<span title="49453 bytes">48.3 kB</span>) - added by <em>janoc</em> <a class="timeline" href="http://www.openscenegraph.org/projects/osg/timeline?from=2009-05-26T13%3A46%3A59Z%2B0200&amp;precision=second" title="2009-05-26T13:46:59Z+0200 in Timeline" style="color: #bb0000; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb;">3 years</a> ago. <q>VRML test files, includes <a class="missing wiki" href="http://www.openscenegraph.org/projects/osg/wiki/IndexedFaceSet" rel="nofollow" style="color: #999988; border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: #bbbbbb; background-color: #fafaf0;">IndexedFaceSet?</a>, primitives and textured surface</q></li>
</ul>]]></description>
			<author>thomas.hogarth@gmail.com (Thomas Hogarth)</author>
			<category>Windows</category>
			<pubDate>Thu, 17 May 2012 05:33:27 +0000</pubDate>
		</item>
		<item>
			<title>Compiling with Visual Studio</title>
			<link>https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/37-visual-studio</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/37-visual-studio</guid>
			<description><![CDATA[<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Follows are details on usage of OpenSceneGraph from source packages. These are useful if you want to always stay up to date with the newest OSG sources from the <a href="https://github.com/openscenegraph/OpenSceneGraph" target="_self">github repository,</a> or to use an OSG release that has no binaries. If you don't want this, you can probably use <a href="https://www.openscenegraph.com/index.php/download-section/stable-releases">precompiled binaries from the Downloads page</a>. </p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Subpages:<br /><a href="https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/38-visual-studio-plugins">Help for compiling specific optional plugins</a><br /><a href="https://www.openscenegraph.com/index.php/documentation/platform-specifics/windows/39-older-visual-studio-versions">Instructions when using older Visual Studio versions (6.0)</a></p>
<h3><strong>Compiling with Visual Studio .NET</strong></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">(Note: These instructions are valid for Visual Studio .NET 2005 (8.0) and Visual Studio Express 2005 (see below), but they should also apply to Visual Studio .NET 2003 (7.0) or to Visual Studio .NET 2008 (9.0).)</p>
<h3><strong>Initial setup</strong><a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Initialsetup" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">The project files are set up so that if you have the dependencies in the same base directory as the OpenSceneGraph sources, then it will find them. Thus, the suggested directory structure is:</p>
<blockquote style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">
<p><tt>OpenSceneGraph-VERSION</tt> <em>(replace VERSION by 2.8 or SVN or whatever)</em> <br /><tt>OpenSceneGraph-VERSION\3rdParty</tt> <em>(put the contents of the 3rdParty zip file in here)</em> <br /><tt>OpenSceneGraph-VERSION\OpenSceneGraph</tt></p>
</blockquote>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">In the <tt>OpenSceneGraph</tt> directory, see <a href="https://www.openscenegraph.com/index.php/download-section">the Downloads page</a> and download the sources for the version you're interested in, or check out the sources from the <a href="https://github.com/openscenegraph/OpenSceneGraph" target="_self">github repository,</a></p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">In the <tt>3rdParty</tt> directory, see <a href="https://www.openscenegraph.com/index.php/download-section/dependencies">the Dependencies page</a> and download the dependencies for your platform. Place them so that the bin, lib etc. directories are directly under <tt>OpenSceneGraph-VERSION\3rdParty</tt> .</p>
<h3><strong>Generating Project &amp; Solution files with CMake</strong><a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#GeneratingProjectSolutionfileswithCMake" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Once the sources and dependencies are in place you need to generate the Visual Studio solution and project files. This is done with CMake. Download it at <a href="http://www.cmake.org/HTML/Download.html">http://www.cmake.org/HTML/Download.html</a>.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Start the CMake GUI once it's installed, and select root <tt>OpenSceneGraph</tt> directory in the "Where is the source code" field. The same directory needs to be put into the "Where to build the binaries" field. If you like to do out-of-source builds, you can add <tt>\build</tt> to the end. Then click Configure.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">You can then customize your build. The red lines in the CMake window indicate new variables that you may want to fill out or change, but most are optional. Some variables will be filled in automatically (such as <tt>ACTUAL_3RDPARTY_DIR</tt>, if you followed the directory structure above). I typically enable <tt>BUILD_OSG_EXAMPLES</tt> and set <tt>CMAKE_INSTALL_PREFIX</tt> to the OpenSceneGraph directory so that the binaries are installed in <tt>OpenSceneGraph\bin</tt>. You can also set it to somewhere else if you want to keep your source tree clean.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Note: In the permission-restricted environment of Windows Vista and later, do not set CMAKE_INSTALL_PREFIX to be a restricted folder like "Program Files". The make process will not be able to elevate permissions sufficiently to write to the destination, and will fail (typically while installing the first component, OpenThreads, with an error like "file INSTALL cannot copy file OpenThreads.dll").</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Check if the dependencies you have are detected - if not fill in the variables manually. If you need to fill in some variables manually, you may need to show "Advanced" variables (with the drop-down at the top of the window) and make sure all relevant variables are set correctly for a given dependency. Any plugins or examples for which you don't have the dependencies will just not be part of the generated project files, which is cleaner than it was before (the projects would be there but just refuse to build, which resulted in lots of noise when building for things you knew would not build anyway).</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Once your build configuration is to your liking, click Configure until the Generate button is enabled, then click that. Once it's done generating the project files, you can close CMake.</p>
<h3><strong>Building with Visual Studio</strong><a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#BuildingwithVisualStudio" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Open the generated <tt>OpenSceneGraph.sln</tt> file, which will be in the directory you entered under "Where to build the binaries" (eg. <tt>OpenSceneGraph\build</tt>), with Visual Studio. Select your desired build type (Debug, Release, RelWithDebugInfo, MinSizeRel) and press F7 for "Build Solution". Assuming everything builds correctly, you can then right-click on the INSTALL project and build that, which will copy the compiled files to the correct directories (based on what you set <tt>CMAKE_INSTALL_PREFIX</tt> to). Before that, the compiled files all reside in the build directory, and I don't recommend you use them from there.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Just to reiterate: <strong>Always build the INSTALL project</strong>. The locations where the files are copied to as part of the INSTALL target are the correct locations from where you should use them (<tt>bin\</tt> for application executables and DLLs, <tt>lib\</tt> for libraries, <tt>include\</tt> for headers, and <tt>share\OpenSceneGraph\bin\</tt> for example executables). See "Environment variables" below for some tips to set up your build environment for your own project to use the files from the correct locations.</p>
<h3><strong>Notes</strong><a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Notes" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<h4 style="padding-left: 30px;">Compilation time<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Compilationtime" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h4>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal; padding-left: 30px;">A word of warning, the first time you compile from source it will take some time. After that, if you update an SVN checkout for example, it will compile incrementally (only what changed) so that's quite a bit faster.</p>
<h4 style="padding-left: 30px;">Always regenerate after updates<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Alwaysregenerateafterupdates" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h4>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal; padding-left: 30px;">You should regenerate the project files with CMake each time you update from SVN or update to a newer snapshot of the source code. That will make sure that a) any new build configuration options added to the CMake build files will be taken into account, and b) any new files will be included in the VS projects and compiled correctly. You can regenerate the build files by just opening the root <tt>CMakeLists.txt</tt> in the CMake GUI and setting the build directory to the same thing you had before (<tt>OpenSceneGraph\build</tt>, for example), that way any settings you had made will still be there. Just click Configure then Generate, open the <tt>OpenSceneGraph.sln</tt> and build.</p>
<h4 id="Freetypeplugin" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; page-break-after: avoid; color: #000000; font-size: 13px; line-height: normal; padding-left: 30px;">Freetype plugin<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Freetypeplugin" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h4>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal; padding-left: 30px;">If have the 3rdparty libraries installed, the BUILD_OSG_PLUGINS is ON in your CMake file and the FREETYPE_LIBRARY_DEBUG path is found it might still happen that the project files for Freetype plugins or not built. Select "Show Advanced Values" in CMake and copy the directory found in FREETYPE_INCLUDE_DIR to FREETYPE_INCLUDE_DIR_freetype2 and FREETYPE_INCLUDE_DIR_ft2build.</p>
<h4 id="CleanuptheCMakecache" style="font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; page-break-after: avoid; color: #000000; font-size: 13px; line-height: normal; padding-left: 30px;">Cleanup the CMake cache<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#CleanuptheCMakecache" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h4>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal; padding-left: 30px;">Finally, note that from time to time, to see new settings, you will need to delete the CMakeCache.txt file in the <tt>build</tt> directory, which will also erase your settings... This should be rare though.</p>
<h3>Extensionless headers and syntax highlighting on Visual Studio 2003/2005/2008<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#ExtensionlessheadersandsyntaxhighlightingonVisualStudio200320052008" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">In the OSG sources, in the <tt>PlatformSpecifics\Windows</tt> directory, there is a text file <tt>VisualStudio_Syntax_Highlighting.txt</tt> in which you can find instructions to get syntax highlighting on extensionless header files. It basically says:</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Go to Tools-Options, then Text Editor-File Extension, check "Map Extensionless Files To" at the bottom and select "Microsoft Visual C++" in the list to the right.</p>
<h3>Starting a new project<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Startinganewproject" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">There are two basic ways to start a new project using the OSG.</p>
<p>Create a new solution and project, and add the OSG libs as dependencies<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#CreateanewsolutionandprojectandaddtheOSGlibsasdependencies" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Pros:</p>
<ul style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">
<li>Keeps everything separate, you can keep a tight control over the files in your project.</li>
<li>If your own project is in SVN, it won't conflict with the OSG SVN.</li>
<li>It's easy to distribute your project.</li>
</ul>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Cons:</p>
<ul style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">
<li>If you need to modify the OSG or look something up, you need to open the OSG's workspace/solution separately.</li>
</ul>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">I normally start the project by copying <tt>OpenSceneGraph\applications\osgViewer\osgViewer.cpp</tt> into my new project's src directory, and compiling that. If that doesn't compile and run, there's a problem. See "Environment Variables" below for how to set up the compiler's include and library search paths easily.</p>
<h3><strong>Create a project directly in the OSG workspace / solution</strong><a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#CreateaprojectdirectlyintheOSGworkspacesolution" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Pros:</p>
<ul style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">
<li>If you have to modify OSG itself for your project, the Visual Studio dependency check will recompile what is needed automatically.</li>
<li>You can quickly switch from the project on which you're working to the OSG code itself.</li>
<li>You can examine code for any src/example easily.</li>
</ul>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Cons:</p>
<ul style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">
<li>Your OSG workspace/solution will quickly become crowded once you start adding lots of your projects to it (as if it wasn't enough already...).</li>
<li>When you regenerate the build files with CMake, you will have to re-add your project(s) to it.</li>
<li>It's hard to separate your project from the OSG for distribution, so the other way is "cleaner".</li>
<li>You can't keep your project in SVN if your OSG directories are also from SVN, unless you copy your project's files somewhere else, in which case why don't you just use the first method instead of having to do both?</li>
</ul>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">I guess you can see that I don't recommend this way of doing. The OSG workspace/solution is already so big as it is, I think it's best to keep your mind uncluttered by creating a separate project for your own stuff. The rest of this guide is based on using the first option.</p>
<h3><strong>Environment variables</strong><a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Environmentvariables" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">If you select the first method, a way to simplify things and to make your project files work on multiple different machines is to use some standard environment variables. I use the following:</p>
<pre style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;"><tt>OSG_ROOT</tt> points to the base of the OSG file structure (the directory that contains <tt>include</tt>, <tt>src</tt> etc. subdirectories)<br /><tt>OSG_BIN_PATH = %OSG_ROOT%\bin</tt><br /><tt>OSG_INCLUDE_PATH = %OSG_ROOT%\include</tt><br /><tt>OSG_LIB_PATH = %OSG_ROOT%\lib</tt><br /><tt>OSG_SAMPLES_PATH = %OSG_ROOT%\share\OpenSceneGraph\bin</tt><br /><tt>OSG_FILE_PATH = ???\OpenSceneGraph-Data-X.X</tt></pre>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Then, add <tt>%OSG_BIN_PATH%</tt> and <tt>%OSG_SAMPLES_PATH%</tt> to your <tt>PATH</tt> environment variable. That way, not only can you run examples easily, but the latest DLLs will always be found. When starting an application, Windows looks for the required DLLs first in the executable's directory, then in the <tt>PATH</tt>.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Make sure you restart Visual Studio if it was open when you added/changed these environment variables, so that it picks up te changes.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">In your project's properties, use those environment variables to get Visual Studio to find the OSG libraries. Here are the settings I use:</p>
<pre style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Properties - C/C++ - General - Additional Include Directories = <tt>$(OSG_INCLUDE_PATH)</tt><br />Properties - C/C++ - Preprocessor - Preprocessor Definitions = <tt>WIN32;_WIN32;NDEBUG</tt><br />Properties - Linker - General - Additional Library Directories = <tt>$(OSG_LIB_PATH)</tt><br />Properties - Linker - Input - Additional Dependencies = (any OSG library your project needs - for example: <tt>osg.lib osgGA.lib osgDB.lib osgViewer.lib osgText.lib osgUtil.lib OpenThreads.lib</tt>)</pre>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Remember to do the same thing in your project's Debug configuration, but add a <tt>d</tt> to the end of the OSG and OpenThreads library names (<tt>osg.lib</tt> becomes <tt>osgd.lib</tt> and so on). Also change <tt>NDEBUG</tt> to <tt>_DEBUG</tt> in the Preprocessor Definitions.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Once that's done, your project should be able to compile, link and run. If not, you can test your paths in a console (Start-Run, type <tt>cmd</tt>, press enter), by for example typing <tt>echo %OSG_LIB_PATH%</tt> or <tt>dir %OSG_LIB_PATH%</tt>. With those commands you should be able to see what is wrong.</p>
<h3>Important note about plugins<a class="anchor" href="https://www.openscenegraph.com/projects/osg/wiki/Support/PlatformSpecifics/VisualStudio#Importantnoteaboutplugins" title="Link to this section" style="color: #d7d7d7; border-image: initial; font-size: 0.8em; vertical-align: text-top; border-width: initial; border-color: initial; visibility: hidden; border-style: none;"></a></h3>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">Once in a while, we get a message on the mailing list asking why the version number is added to the bin\osgPlugins directory name. Normally, the reason they ask is that after updating their copy of OSG, they had to modify their project files or their <tt>PATH</tt> to change the version number to point to the new directory.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">There is <strong>never</strong> a need to add that directory to your library search paths or <tt>PATH</tt> environment variable. The OSG knows how to find the plugins by itself. In general, it will try to add <tt>osgPlugins-&lt;version&gt;</tt> to the directories in your <tt>PATH</tt> until it finds the right one. And since it knows its own version, it will find the right plugins directory.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">If you had to add that directory to your <tt>PATH</tt>, for example in order to get examples to load the .osg files (cow.osg for example), that means that you didn't build the INSTALL target after compiling OSG. In that case, the plugins will reside in directories like <tt>...\OpenSceneGraph\build\lib\osgPlugins-&lt;version&gt;\release</tt>. So the problem is not the version added to the directory name, it's the <tt>lib</tt> instead of <tt>bin</tt>, and the <tt>release</tt> subdirectory. That's because CMake builds DLLs in the <tt>lib</tt> tree, and then the INSTALL target copies them to the <tt>bin</tt> tree, more specifically to <tt>...\OpenSceneGraph\bin\osgPlugins-&lt;version&gt;</tt>. And since <tt>...\OpenSceneGraph\bin</tt> is on your <tt>PATH</tt>, OSG will find them fine.</p>
<p style="color: #000000; font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-size: 13px; line-height: normal;">More generally, you should <strong>never</strong> have to put a reference to a subdirectory of the <tt>build</tt> directory into your environment variables. That is just a temporary location where things get built. Once the INSTALL target is run, the files will be in their final locations, which are <tt>bin\</tt> for application executables and DLLs, <tt>lib\</tt> for libraries, <tt>include\</tt> for headers, and <tt>share\OpenSceneGraph\bin\</tt> for the example executables.</p>]]></description>
			<author>thomas.hogarth@gmail.com (Thomas Hogarth)</author>
			<category>Windows</category>
			<pubDate>Tue, 15 May 2012 07:05:07 +0000</pubDate>
		</item>
	</channel>
</rss>
