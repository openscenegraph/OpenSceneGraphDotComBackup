<?xml version="1.0" encoding="utf-8"?>
<!-- generator="Joomla! - Open Source Content Management" -->
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>User Guides</title>
		<description><![CDATA[Project website for OpenSceneGraph]]></description>
		<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides</link>
		<lastBuildDate>Wed, 07 Feb 2024 17:03:40 +0000</lastBuildDate>
		<generator>Joomla! - Open Source Content Management</generator>
		<atom:link rel="self" type="application/rss+xml" href="https://www.openscenegraph.com/index.php/documentation/guides/user-guides?format=feed&amp;type=rss"/>
		<language>en-gb</language>
		<managingEditor>robert@openscenegraph.com (OpenSceneGraph)</managingEditor>
		<item>
			<title>Using the OpenFlight Plugin</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/52-using-the-openflight-plugin</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/52-using-the-openflight-plugin</guid>
			<description><![CDATA[<p>The OpenFlight format is an defacto industry standard format in the visual simulation industry, developed by Multigen Paradigm Inc. (MPI) <br />and currently maintained by Presagis. <a href="http://www.presagis.com/products_services/standards/openflight/more/openflight_specifications/" target="_blank">The OpenFlight file format specification is available for download</a>.</p>
<p>The OSG OpenFlight plugin exists as a library named <em>osgdb_openflight.&lt;ext&gt;</em>, and it supports iimporting and exporting files with the .flt extension. As with any OSG plugin, documentation is available from the command line using osgconv as follows:</p>
<pre>osgconv --format flt</pre>
<h3>Import Option Strings</h3>
<table class="withborder">
<tbody>
<tr>
<td>billboardCenter</td>
<td>Set billboard rotation point to center of face.</td>
</tr>
<tr>
<td>dofAnimation</td>
<td>Enable animation on DOF nodes.</td>
</tr>
<tr>
<td>readObjectRecordData</td>
<td>Read object records and store as osgSim::ObjectRecordData.</td>
</tr>
<tr>
<td><strong>Texture:</strong></td>
<td> </td>
</tr>
<tr>
<td>clampToEdge</td>
<td>Use texture wrap mode CLAMP_TO_EDGE where CLAMP is specified.</td>
</tr>
<tr>
<td>noTextureAlphaForTransparancyBinning</td>
<td>Do not enable alpha blending based on image translucency.</td>
</tr>
<tr>
<td><strong>Structure:</strong></td>
<td> </td>
</tr>
<tr>
<td>preserveFace</td>
<td>Preserve Face information like name and comment by translating each face record into an osg::Geode.</td>
</tr>
<tr>
<td>preserveObject</td>
<td>Preserve Object information.</td>
</tr>
<tr>
<td><strong>Externals:</strong></td>
<td> </td>
</tr>
<tr>
<td>keepExternalReferences</td>
<td>Externals will be left as ProxyNodes.</td>
</tr>
<tr>
<td>cloneExternalReferences</td>
<td>Externals are cloned.</td>
</tr>
<tr>
<td><strong>Units conversion:</strong></td>
<td> </td>
</tr>
<tr>
<td>convertToFeet</td>
<td>Convert units to feet.</td>
</tr>
<tr>
<td>convertToInches</td>
<td>Convert units to inches.</td>
</tr>
<tr>
<td>convertToMeters</td>
<td>Convert units to meters.</td>
</tr>
<tr>
<td>convertToKilometers</td>
<td>Convert units to kilometers.</td>
</tr>
<tr>
<td>convertToNauticalMiles</td>
<td>Convert units to miles.</td>
</tr>
<tr>
<td>noUnitsConversion</td>
<td>Disable units conversion. </td>
</tr>
</tbody>
</table>
<h3>Export Option Strings</h3>
<table class="withborder">
<tbody>
<tr>
<td>version=&lt;ver&gt;</td>
<td>Specifies the version of the output FLT file. Supported values include 15.7, 15.8, and 16.1. Default is 16.1. Example: "version=15.8".</td>
</tr>
<tr>
<td>units=&lt;units&gt;</td>
<td>Specifies the contents of the \c Units field of the FLT header record. Valid values include INCHES, FEET, METERS, KILOMETERS, and NATICAL_MILES. Default is METERS. Example: "units=METERS".</td>
</tr>
<tr>
<td>validate</td>
<td>If present in the Options string, the plugin does not write a FLT file. Instead, it returns an indication of the scene graph's suitability for FLT export.</td>
</tr>
<tr>
<td>tempDir=&lt;path&gt;</td>
<td>Specifies the directory to use for creation of temporary files. If not specified, the directory is taken from the file name. If the file doesn't contain a path, the current working directory is used. Applications should set this to the name of their app-specific temp directory. If the path contains spaces, use double quotes to ensure correct parsing. Examples: "tempDir=/tmp"; "tempDir=\"C:\\My Temp Dir\"".</td>
</tr>
<tr>
<td>lighting=&lt;value&gt;</td>
<td>Specifies a default enable/disable state for lighting. By default, the exporter assumes lighting is enabled (GL_LIGHTING ON). Set this to either ON or OFF. Example: "lighting=OFF".</td>
</tr>
<tr>
<td>stripTextureFilePath</td>
<td>If present in the Options string, the exporter strips the path from texture file names, and writes only the texure file name to the FLT Texture Palette. By default, the exporter doesn't strip the path, and the name written to the Texture Palette is taken directly from the osg::Image object referenced by the osg::Texture2D StateAttribute. </td>
</tr>
</tbody>
</table>
<div id="content" class="wiki">
<div class="wikipage searchable">
<p>If you encounter any issues with the exporter, please post to osg-users and include the following info:</p>
<ul>
<li>.osg file for scene graph you are exporting</li>
<li>OSG_NOTIFY_LEVEL=INFO output</li>
<li>If a crash, include a stack trace</li>
</ul>
<p>A <a href="http://osgfltexport.googlecode.com" target="_blank">regression test suite</a> is available to test FLT export in OSG. Please checkout and run it to verify your build. Contributions to the test suite are welcome, please see the top-level readme.txt for contact information.</p>
<p><em>MultiGen, OpenFlight, and Flight Format are registered trademarks of MultiGen Inc.</em></p>
</div>
</div>]]></description>
			<author>SkewMatrix@gmail.com (Paul Martz)</author>
			<category>User Guides</category>
			<pubDate>Thu, 30 Aug 2012 22:37:04 +0000</pubDate>
		</item>
		<item>
			<title>osgviewer</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/54-osgviewer</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/54-osgviewer</guid>
			<description><![CDATA[<p>osgviewer is the basic scene graph viewer distributed with OpenSceneGraph. Its primary purpose is an example of how to write a simple viewer, but it is also functional enough to use as a basic 3D graphics viewer.</p>
<h4 id="Environmentalsettings">Environmental settings</h4>
<p>Ensure that the paths to the OpenSceneGraph libraries and applications are set.</p>
<h4 id="Runningosgviewer">Running osgviewer</h4>
<p>In a console window type:</p>
<blockquote>
<pre><tt>osgviewer cow.osg</tt></pre>
</blockquote>
<p>This will open up the viewer full screen.</p>
<h4 id="Commandlineoptions">Command line options</h4>
<p>To print out the command line options available, in a console window type:</p>
<blockquote>
<pre><tt>osgviewer --help</tt></pre>
</blockquote>
<table class="withborder">
<tbody>
<tr>
<td>Options:</td>
</tr>
<tr>
<td>--dem &lt;filename&gt;</td>
<td>Load an image/DEM and render it on a HeightField</td>
</tr>
<tr>
<td>--display &lt;type&gt;</td>
<td>MONITOR | POWERWALL | REALITY_CENTER | EAD_MOUNTED_DISPLAY</td>
</tr>
<tr>
<td>--help-all</td>
<td>Display all command line, env vars and keyboard &amp; mouse bindigs</td>
</tr>
<tr>
<td>--help-env</td>
<td>Display environmental variables available</td>
</tr>
<tr>
<td>--help-keys</td>
<td>Display keyboard &amp; mouse bindings available</td>
</tr>
<tr>
<td>--image ;filename&gt;</td>
<td>Load an image and render it on a quad</td>
</tr>
<tr>
<td>--rgba</td>
<td>Request a RGBA color buffer visual</td>
</tr>
<tr>
<td>--run-till-elapsed-time</td>
<td>Specify the about of time to run</td>
</tr>
<tr>
<td>--run-till-frame-number &lt;integer&gt;</td>
<td>Specify the number of frame to run</td>
</tr>
<tr>
<td>--stencil</td>
<td>Request a stencil buffer visual</td>
</tr>
<tr>
<td>--stereo</td>
<td>Use default stereo mode which is ANAGLYPHIC if not overriden by environmental variable</td>
</tr>
<tr>
<td>--stereo &lt;mode&gt;</td>
<td>ANAGLYPHIC | QUAD_BUFFER | HORIZONTAL_SPLIT | VERTICAL_SPLIT | LEFT_EYE | RIGHT_EYE | ON | OFF</td>
</tr>
<tr>
<td>-O &lt;option_string&gt;</td>
<td>Provide an option string to reader/writers used to load databases</td>
</tr>
<tr>
<td>-c &lt;filename&gt;</td>
<td>Specify camera config file</td>
</tr>
<tr>
<td>-e &lt;extension&gt;</td>
<td>Load the plugin associated with handling files with specified extension</td>
</tr>
<tr>
<td>-h or --help</td>
<td>Display command line paramters</td>
</tr>
<tr>
<td>-l &lt;library&gt;</td>
<td>Load the plugin</td>
</tr>
<tr>
<td>-p &lt;filename&gt;</td>
<td>Specify camera path file to animate the camera through the loaded scene</td>
</tr>
</tbody>
</table>
<h2 id="Keyboardandmousebindings">Keyboard and mouse bindings</h2>
<p>When running osgviewer to print out the keyboard and mouse bindings simply press 'h' to toggle them, then 'h' again to toggle them off. Or to print the keyboard mouse options to a console window tyoe:</p>
<blockquote>
<pre><tt>osgviewer --help-keys</tt></pre>
</blockquote>
<table class="withborder">
<tbody>
<tr>
<td>Keyboard and Mouse Bindings:</td>
</tr>
<tr>
<td>1</td>
<td>Select 'Trackball' camera manipulator (default)</td>
</tr>
<tr>
<td>2</td>
<td>Select 'Flight' camera manipulator</td>
</tr>
<tr>
<td>3</td>
<td>Select 'Drive' camera manipulator</td>
</tr>
<tr>
<td>4</td>
<td>Select 'Terrain' camera manipulator</td>
</tr>
<tr>
<td>5</td>
<td>Select 'UFO' camera manipulator</td>
</tr>
<tr>
<td>Drive: Space</td>
<td>Reset the viewing position to home</td>
</tr>
<tr>
<td>Drive: a</td>
<td>Use mouse middle,right mouse buttons for speed</td>
</tr>
<tr>
<td>Drive: q</td>
<td>Use mouse y for controlling speed</td>
</tr>
<tr>
<td>Escape</td>
<td>Exit the application</td>
</tr>
<tr>
<td>Flight: Space</td>
<td>Reset the viewing position to home</td>
</tr>
<tr>
<td>Flight: a</td>
<td>No yaw when banked</td>
</tr>
<tr>
<td>Flight: q</td>
<td>Automatically yaw when banked (default)</td>
</tr>
<tr>
<td>O [=<a class="missing wiki" href="http://www.openscenegraph.org/projects/osg/wiki/PrnScn" rel="nofollow">PrnScn?</a>=]</td>
<td>Write camera images to "saved_image*.rgb"</td>
</tr>
<tr>
<td>Trackball: +</td>
<td>When in stereo, increase the fusion distance</td>
</tr>
<tr>
<td>Trackball: -</td>
<td>When in stereo, reduse the fusion distance</td>
</tr>
<tr>
<td>Trackball: Space</td>
<td>Reset the viewing position to home</td>
</tr>
<tr>
<td>UFO:</td>
<td>Please see <a class="ext-link" href="http://www.openscenegraph.org/html/UFOCameraManipulator.html"><span class="icon">http://www.openscenegraph.org/html/UFOCameraManipulator.html</span></a></td>
</tr>
<tr>
<td>UFO: H</td>
<td>Reset the viewing position to home</td>
</tr>
<tr>
<td>Z</td>
<td>If recording camera path stop recording camera path, save to "saved_animation.path"</td>
</tr>
<tr>
<td> </td>
<td>Then start viewing from being on animation path</td>
</tr>
<tr>
<td>b</td>
<td>Toggle backface culling</td>
</tr>
<tr>
<td>f</td>
<td>Toggle fullscreen</td>
</tr>
<tr>
<td>h</td>
<td>Display help</td>
</tr>
<tr>
<td>l</td>
<td>Toggle lighting</td>
</tr>
<tr>
<td>s</td>
<td>Toggle instrumention</td>
</tr>
<tr>
<td>t</td>
<td>Toggle texturing</td>
</tr>
<tr>
<td>v</td>
<td>Toggle block and vsync</td>
</tr>
<tr>
<td>w</td>
<td>Toggle polygon fill mode between fill, line (wire frame) and points</td>
</tr>
<tr>
<td>z</td>
<td>Start recording camera path.</td>
</tr>
</tbody>
</table>
<h2 id="Environmentalvariablesettings">Environmental variable settings</h2>
<p>To print out the command line options available, in a console window type:</p>
<blockquote>
<pre><tt>osgviewer --help-env</tt></pre>
</blockquote>
<table class="withborder">
<tbody>
<tr>
<td>Environmental Variables:</td>
</tr>
<tr>
<td>OSG_COMPUTE_NEAR_FAR_MODE &lt;mode&gt;</td>
<td>DO_NOT_COMPUTE_NEAR_FAR | COMPUTE_NEAR_FAR_USING_BOUNDING_VOLUMES | COMPUTE_NEAR_FAR_USING_PRIMITIVES</td>
</tr>
<tr>
<td>OSG_DISPLAY_TYPE &lt;type&gt;</td>
<td>MONITOR | POWERWALL | REALITY_CENTER | HEAD_MOUNTED_DISPLAY</td>
</tr>
<tr>
<td>OSG_EYE_SEPARATION &lt;float&gt;</td>
<td>physical distance between eyes</td>
</tr>
<tr>
<td>OSG_FILE_PATH &lt;path&gt;[:path]..</td>
<td>Paths for locating datafiles</td>
</tr>
<tr>
<td>OSG_LIBRARY_PATH &lt;path&gt;[:path]..</td>
<td>Paths for locating libraries/ plugins</td>
</tr>
<tr>
<td>OSG_MAX_NUMBER_OF_GRAPHICS_CONTEXTS &lt;int&gt;</td>
<td>maximum number of graphics contexts to be used with applications.</td>
</tr>
<tr>
<td>OSG_NEAR_FAR_RATIO &lt;float&gt;</td>
<td>Set the ratio between near and far planes - must greater than 0.0 but less than 1.0.</td>
</tr>
<tr>
<td>OSG_OPTIMIZER "&lt;type&gt; [&lt;type&gt;]"</td>
<td>OFF | DEFAULT | FLATTEN_STATIC_TRANSFORMS | REMOVE_REDUNDANT_NODES | COMBINE_ADJACENT_LODS | SHARE_DUPLICATE_STATE | MERGE_GEOMETRY | SPATIALIZE_GROUPS | COPY_SHARED_NODES | TRISTRIP_GEOMETRY | OPTIMIZE_TEXTURE_SETTINGS</td>
</tr>
<tr>
<td>OSG_SCREEN_DISTANCE &lt;float&gt;</td>
<td>physical distance between eyes and screen</td>
</tr>
<tr>
<td>OSG_SCREEN_HEIGHT &lt;float&gt;</td>
<td>physical screen height</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_AUTO_ADJUST_ASPECT_RATIO &lt;mode&gt;</td>
<td>OFF | ON Default to ON to compenstate for the compression of the aspect ratio when viewing in split screen stereo. Note, if you are setting fovx and fovy explicityly OFF should be used.</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_HORIZONTAL_EYE_MAPPING &lt;mode&gt;</td>
<td>LEFT_EYE_LEFT_VIEWPORT | LEFT_EYE_RIGHT_VIEWPORT</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_HORIZONTAL_SEPARATION &lt;float&gt;</td>
<td>number of pixels between viewports</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_VERTICAL_EYE_MAPPING &lt;mode&gt;</td>
<td>LEFT_EYE_TOP_VIEWPORT | LEFT_EYE_BOTTOM_VIEWPORT</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_VERTICAL_SEPARATION &lt;float&gt;</td>
<td>number of pixels between viewports</td>
</tr>
<tr>
<td>OSG_STEREO &lt;mode&gt;</td>
<td>OFF | ON</td>
</tr>
<tr>
<td>OSG_STEREO_MODE &lt;mode&gt;</td>
<td>QUAD_BUFFER | ANAGLYPHIC | HORIZONTAL_SPLIT | VERTICAL_SPLIT | LEFT_EYE | RIGHT_EYE</td>
</tr>
<tr>
<td>PRODUCER_CAMERA_CONFIG_FILE &lt;filename&gt;</td>
<td>specify the default producer camera config to use when opening osgProducer based applications.</td>
</tr>
</tbody>
</table>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Wed, 12 Sep 2012 00:29:37 +0000</pubDate>
		</item>
		<item>
			<title>osgconv</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/55-osgconv</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/55-osgconv</guid>
			<description><![CDATA[<p>osgconv is utility program for reading in 3d databases, apply basic operations to them, then saving out as a single 3d database.</p>
<h4 id="Usingosgconvtoconvertintonativeosgformats">Using osgconv to convert into native osg formats</h4>
<p>osgconv can be very useful to read from standard 3d formats such as OpenFlight, 3DS, Alias Wavefront (OBJ) etc and then convert to an OSG native format supported such as the OpenSceneGraph .osg ascii format or .ive binary format. By default, optimization of the loaded scene graph will be peformed so the resulting scene graph written out will be smaller and faster to use at run-time, and the .ive file format is particular fast for loading making it ideal for database paging and large database.</p>
<p>Convert cow.obj to equivilant IVE format file:</p>
<blockquote>
<pre><tt>osgconv cow.obj cow.ive</tt>
</pre>
</blockquote>
<p>Convert cow.obj to equivilant IVE format file and compress and automatically generate mipmapped textures:</p>
<blockquote>
<pre><tt>osgconv --compressed cow.obj cow.ive</tt>
</pre>
</blockquote>
<h4 id="Commandlineoptionsavailable">Command line options available</h4>
<p>For a full list of command line options supported type:</p>
<blockquote>
<pre><tt>osgconv --help</tt>
</pre>
</blockquote>
<p>Which will print out out the following:</p>
<p>usage:</p>
<blockquote>
<pre><tt>osgconv [options] infile1 [infile2 ...] outfile</tt>
</pre>
</blockquote>
<p>options:</p>
<table class="withborder" width="1127">
<tbody>
<tr>
<td>-O option</td>
<td>ReaderWriter option</td>
</tr>
<tr>
<td>--compressed</td>
<td>Compress textures.</td>
</tr>
<tr>
<td>--compressed</td>
<td>Enable the usage of compressed textures.</td>
</tr>
<tr>
<td>--compressed-arb</td>
<td>Enable the usage of OpenGL ARB compressed textures</td>
</tr>
<tr>
<td>--compressed-dxt1</td>
<td>Enable the usage of S3TC DXT1 compressed textures</td>
</tr>
<tr>
<td>--compressed-dxt3</td>
<td>Enable the usage of S3TC DXT3 compressed textures</td>
</tr>
<tr>
<td>--compressed-dxt5</td>
<td>Enable the usage of S3TC DXT5 compressed textures</td>
</tr>
<tr>
<td>-l libraryName</td>
<td>load plugin of name libraryName i.e. -l osgdb_pfb <br /> Useful for loading reader/writers which can load other file formats in addition to its extension.</td>
</tr>
<tr>
<td>-e extensionName</td>
<td>load reader/wrter plugin for file extension i.e. -e pfb <br /> Useful short hand for specifying full library name as done with -l above, as it automatically expands to the full library name appropriate for each platform.</td>
</tr>
<tr>
<td>-o orientation</td>
<td>Convert geometry from input files to output files.<br /> Format of orientation argument must be the following:<br /> <br /> X1,Y1,Z1-X2,Y2,Z2<br /> or<br /> degrees-A0,A1,A2<br /> <br /> where X1,Y1,Z1 represent the UP vector in the input files and X2,Y2,Z2 represent the UP vector of the output file, or degrees is the rotation angle in degrees around axis (A0,A1,A2). For example, to convert a model built in a Y-Up coordinate system to a model with a Z-up <br /> coordinate system, the argument may look like <br /> <br /> 0,1,0-0,0,1 <br /> or <br /> -90-1,0,0</td>
</tr>
<tr>
<td>-t translation</td>
<td>Convert spatial position of output files. Format of translation argument must be the following :<br /> <br /> X,Y,Z<br /><br /> where X, Y, and Z represent the coordinates of the absolute position in world space</td>
</tr>
<tr>
<td>-s scale</td>
<td>- Scale size of model. Scale argument must be the following :<br /> <br /> SX,SY,SZ<br /> <br /> where SX, SY, and SZ represent the scale factors. Caution: Scaling will be done in destination orientation</td>
</tr>
</tbody>
</table>
<h3>Tips</h3>
<h4 id="TextureConversion">Texture Conversion</h4>
<p>When converting from formats like .IVE which contain embedded texture image files to formats such as .OSG which do not, the resulting database may not display any texturing. The .OSG writer supports the "OutputTextureFiles" option, which instructs it to generate new external texture files.</p>
<p>Example:</p>
<pre><tt>osgconv -O OutputTextureFiles in.ive out.osg</tt>
</pre>
<p>The texture files will be generated using the original texture filename still present in the scenegraph, and will use the format suggested by the filename's extension. This is only possible if the destination directory the texture file specifies already exists.</p>
<p>Some combinations of formats and texture data are not compatible, for example the .RGB format is not capable of storing compressed texture data. This means that if you started with a scene using .RGB external texture images, converted to .IVE and have compressed your texture data since converting to IVE, converting back to .OSG with external .RGB texture files will not be successful. See also: <a class="ext-link" href="http://forum.openscenegraph.org/viewtopic.php?t=3196&amp;view=next"><span class="icon">http://forum.openscenegraph.org/viewtopic.php?t=3196&amp;view=next</span></a></p>
<p>Compression and decompression of textures during the conversion process is done by the OpenGL implementation, not by an OSG software algorithm. This means that driver defects may manifest at this stage. Problems with corrupt textures could be caused by a faulty OpenGL driver.</p>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Wed, 12 Sep 2012 14:35:53 +0000</pubDate>
		</item>
		<item>
			<title>osgarchive</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/56-osgarchive</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/56-osgarchive</guid>
			<description><![CDATA[<p>osgarchive is a utility program that creates and reads database archives. These archives can then be used at runtime with standard OSG applications such as <a href="https://www.openscenegraph.com/index.php/documentation/user-guides/54-osgviewer"><span class="wiki">osgviewer</span></a>.</p>
<h4 id="Quickstepbystepguideonusingosgarchive.">Quick step by step guide on using osgarchive.</h4>
<ol>
<li>
<p>Creating a new archive</p>
<p>To create an archive you have to specify the archive filename, including extension, via the -a &lt;filename&gt; switch, and the insert 3d database and imagery files into the archive vie the -i &lt;filename&gt; [ &lt;filename&gt; ..] syntax such as:</p>
<pre>osgarchive -a archive.osga -i cow.osg glider.osg </pre>
<p>You may also insert the contents of whole directories using the same syntanx.</p>
<pre><tt>osgarchive -a archive.osga -i mydirectory</tt> </pre>
<p>The .osga format also has support for a master file, which is set to the first file inserted into the archive.</p>
</li>
</ol><ol start="2">
<li>
<p>Listing files contained in the archive</p>
<p>To list all the files contained specify the archive, then use the -l switch:</p>
<pre><tt>osgarchive -a archive.osga -l</tt> </pre>
<p>This will print out the list of files contained within the archive.</p>
</li>
</ol><ol start="3">
<li>
<p>Extracting files from an archive</p>
<p>To extract files from the archive specify the archive, then use the -e &lt;filename&gt; [&lt;filename&gt;...] syntanx:</p>
<pre><tt>osgarchive -a archive.osga -e cow.osg</tt>
</pre>
</li>
</ol>
<h4 id="UsingarchivesinotherOpenSceneGraphapplications">Using archives in other OpenSceneGraph applications</h4>
<p>Archive files can be read just like normal OSG files, with the file extraction happening transparently with osgDB. To load the archive's master file simple load the archive itself:</p>
<blockquote>
<pre><tt>osgview</tt><tt>er</tt><tt> archive.osga</tt>
</pre>
</blockquote>
<p>Or to load a specific file within the archive:</p>
<blockquote>
<pre><tt>osgviewer archive.osga/glider.osg</tt>
</pre>
</blockquote>
<p>Or programmatically:</p>
<pre class="wiki">osg::ref_ptr&lt;osg::Node&gt; masterNode = osgDB::readNodeFile("archive.osga");
osg::ref_ptr&lt;osg::Node&gt; gliderNode = osgDB::readNodeFile("archive.osga/glider.osg");
</pre>
<h4 id="Generatingarchivesforpageddatabasesfromosgdem">Generating archives for paged databases from osgdem</h4>
<p>The <a href="https://www.openscenegraph.com/index.php/documentation/user-guides/57-osgdem"><span class="wiki">osgdem</span></a> utility program also has support for generating .osga archives, simply by specify -a &lt;filename&gt; its possible to put all osgdem generated tiles into a single archive file.</p>
<h4 id="Fileformatsthataresupportbyarchiving">File formats that are support by archiving</h4>
<p>The OpenSceneGraph mechanism for archive support uses istream and ostreams for streaming data in and out of the archive, and not all 3d database and image file formats supported by the OpenSceneGraph also support istream and ostreams. Follows are is a list of formats that are currently supported:</p>
<ul>
<li>.osg OpenSceneGraph native ascii format</li>
<li>.ive OpenSceneGraph native binary format</li>
<li>.dds DirectDrawSurface image file format</li>
<li>.jp2 JPEG2000 imagery file format</li>
</ul>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Wed, 12 Sep 2012 20:24:31 +0000</pubDate>
		</item>
		<item>
			<title>osgdem</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/57-osgdem</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/57-osgdem</guid>
			<description><![CDATA[<p>osgdem is utility program for reading geospatial imagery and digital elevation maps (DEM's) and generating large scale 3D terrain databases that OpenSceneGraph applications can load and browse in real-time. What follows is a step-by-step guide to using osgdem, followed by a list of full options available.</p>
<h4 id="Quickstepbystepguide">Quick step by step guide</h4>
<p>What follows are the steps required to get VirtualPlanetBuilder/osgdem compiling and an example of how to use it to process imagery and DEM's to generate a paged databases.</p>
<p>1. Download, compile &amp; install <a href="http://www.gdal.org/"><span class="ext-link"><span class="icon">GDAL</span></span></a>, and OpenSceneGraph. Then download <a class="ext-link" href="http://virtualplanetbuilder.osgforge.org"><span class="icon">VirtualPlanetBuilder</span></a>.</p>
<p>2. For UNIX 'make' users:</p>
<pre class="wiki">cd VirtualPlanetBuilder
./configure
make
sudo make install
</pre>
<p>3. Oh, make sure you have a couple of GB of spare disk space, because you're going to need it :-)</p>
<p>4. Download some data, for this example I'm using the Puget Sound data at:</p>
<blockquote>
<p><a class="ext-link" href="http://www.cc.gatech.edu/projects/large_models/ps.html"><span class="icon">http://www.cc.gatech.edu/projects/large_models/ps.html</span></a> <br /> Download Elevation Map: 16385 × 16385 PNG: 188MB <br /> Download Texture Map: 16384 × 16384 PNG: 268MB</p>
</blockquote>
<p>5. To avoid aliasing artifacts when accessing data I use GDAL utilitiy programs to generate overviews (basically mip maps stored in the .tiff format) via:</p>
<pre class="wiki">gdal_translate ps_height_16k.png ps_height_16k.tif
gdaladdo -r average ps_height_16k.tif 2 4 8 16 32

gdal_translate ps_texture_16k.png ps_texture_16k.tif
gdaladdo -r average ps_texture_16k.tif 2 4 8 16 32
</pre>
<p>6. Now its time to run the osgdem example to generate your PagedLOD database, the more levels you generate the longer it will take (exponentially so). 'osgdem' is just a front end to <tt>osgTerrain::DataSet</tt> where all the hard work happens. Here's what to run :</p>
<pre class="wiki">osgdem --xx 10 --yy 10 -t ps_texture_16k.tif \ 
--xx 10 --yy 10 -d ps_height_16k.tif \ 
-l 8 -v 0.1 -o puget.ive -a pegout.osga
</pre>
<p>Then go away for lunch, afternoon and tea, as generating this much data takes a while... If you don't wish to wait for the full database then reduce the number of levels it generates by setting the -l option to a lower value such as 3. <br /> The command line options used above are:<br /> The first part the --xx and --yy is specifying the size of the pixels in meters, since these png/tif don't have any geospatial data of their own, if you have geospatialised files then you won't need this. <br /> <br /> The second part -t &lt;filename&gt; is the option for specificing the texture maps to use, you can use as many times as you wish, <tt>osgTerrain::DataSet</tt> will moziac them into a single database. <br /> <br /> The third part -d is the option for specifying the digital elevation maps to use, as with the textures you can use as many as you like. <br /> <br /> The -l option specificies the maximum number of levels to generate. If you use a large number then the database generation will stop once the max resolution of your source data is matched by the resulting database. The database generation will decend further where there is high res source data, decend less where there is lower res data. <br /> <br /> The -v option specifies the scaling factor which the height is multiplied by. </p>
<p>The -o &lt;filename&gt; is the output format to generate the databases in. This will be the name of the topmost file in the one you should load. It can be a .ive or a .osg. The .ive is faster and has embedded files. <br /> <br /> And finally the -a &lt;filename&gt; tells the osgdem to write all tiles to a single archive, in this a the OpenSceneGraph native archive format, which uses the extension .osga to disguinish itself. The use of archives is not required, but is recommend since it makes managment of the whole database much more convinient - you have a single file to manage rather than what could be 10's of thousands as is the case of large databases.</p>
<p>7. Time to play. Simply load the database in your app, and if you've based it on osgViewer::Viewer or CompositeViewer all the paging support is already built in. The standard osgviewer works just fine so, here goes:</p>
<pre class="wiki">osgviewer pegout.osga
</pre>
<p>8. If your imagery and DEMs have geospatial coords associated with them then the -xx, --yy and -v options will not be required, making it much simplier to specify - you just need to specifiy options such as -t imge.tif and -d terran.dt0 without any need to set the coordinate system.</p>
<p>9. osgdem can automatically handle mosaicing of sets of files. These can be specified via a sequence of -t &lt;filename&gt; and -d &lt;filename&gt; pairs on the commandline, or via -t &lt;directoryname&gt; and -d &lt;directoryname&gt;.</p>
<h2 id="Commandlineoptions">Commandline options</h2>
<p>See [<a class="ext-link" href="http://www.openscenegraph.org/projects/VirtualPlanetBuilder/wiki/CommandLineOptions"><span class="icon">CommandLineOptions</span></a>]</p>
<h2 id="UsageofVPBsourcefile">Usage of VPB source file</h2>
<p>Write all the osgdem options to a VPB source file, and then use this source file in subsequent runs, this makes means you can avoid all the long winded options when you are experimenting. i.e</p>
<pre class="wiki">// Create the build.source file
osgdem --bluemarble-west -t ../land_shallow_topo_west.tif \
           --bluemarble-east -t ../land_shallow_topo_east.tif \
           --geocentric \
           -o earth/earth.ive \
           --so build.source

// run the build
osgdem -s build.source

// have a look at the file - it's just an extended form of a .osg file
cat build.source

// override the number of levels
osgdem -s build.source -l 4

// run build adding your extra imagery
osgdem -s build.source -t MyOrthoImage.tif
</pre>
<h4 id="CoordinateSystemTips">Coordinate System Tips</h4>
<p>WKT coordinate system definition format is a very comprehensive, but difficult to use as a "human enter-able" specifier for coordinate systems. osgdem uses GDAL under the hood which also allows definition of the <tt>--cs</tt> flag in PROJ4 format. PROJ4's definition format is much more human friendly.</p>
<p><strong>Examples:</strong></p>
<ul>
<li>For a Latitude (Y Axis), Longitude (X Axis) and Altitude coordinate system in units of degrees use: <tt>osgdem ... --cs "+proj=latlong +datum=WGS84" -o ...</tt></li>
<li>For a UTM coordinate system referenced to zone 47 (in this example) in units of meters use: <tt>osgdem ... --cs "+proj=utm +zone=47" -o ...</tt></li>
<li>For a Geocentric system, with the origin being the center of the earth and units in meters use: <tt>osgdem ... --geocentric -o ...</tt></li>
</ul>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Wed, 12 Sep 2012 20:26:22 +0000</pubDate>
		</item>
		<item>
			<title>osgvolume</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/58-osgvolume</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/58-osgvolume</guid>
			<description><![CDATA[<p>Demonstrates OSG's volume rendering capabilities. Needs a list of 2D images, or a 3D image (.dds)</p>
<h4>Program arguments</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>argument</strong></td>
<td><strong>description</strong></td>
<td><strong> default </strong></td>
</tr>
<tr>
<td>--alphaFunc</td>
<td> </td>
<td>0.02</td>
</tr>
<tr>
<td>--clip &lt;ratio&gt;</td>
<td>clip volume as a ratio, 0.0 clip all, 1.0 clip none.</td>
<td>1.0</td>
</tr>
<tr>
<td>--compressed</td>
<td>Enable the usage of compressed textures.</td>
<td> </td>
</tr>
<tr>
<td>--compressed-arb</td>
<td>Enable the usage of OpenGL ARB compressed textures</td>
<td> </td>
</tr>
<tr>
<td>--compressed-dxt1</td>
<td>Enable the usage of S3TC DXT1 compressed textures.</td>
<td> </td>
</tr>
<tr>
<td>--compressed-dxt3</td>
<td>Enable the usage of S3TC DXT3 compressed textures.</td>
<td> </td>
</tr>
<tr>
<td>--compressed-dxt5</td>
<td>Enable the usage of S3TC DXT5 compressed textures.</td>
<td> </td>
</tr>
<tr>
<td>--images [filenames]</td>
<td>Specify a stack of 2d images to build the 3d volume from.</td>
<td> </td>
</tr>
<tr>
<td>--maxTextureSize &lt;size&gt;</td>
<td>Set the texture maximum resolution in the s,t,r (x,y,z) dimensions.</td>
<td> </td>
</tr>
<tr>
<td>--modulate-alpha-by-luminance</td>
<td>For each pixel multiple the alpha value by the luminance.</td>
<td> </td>
</tr>
<tr>
<td>--num-components &lt;num&gt;</td>
<td>Set the number of components to in he target image.</td>
<td> </td>
</tr>
<tr>
<td>--r_maxTextureSize &lt;size&gt;</td>
<td>Set the texture maximum resolution in the r (z) dimension.</td>
<td> </td>
</tr>
<tr>
<td>--replace-alpha-with-luminance</td>
<td>For each pixel mSet the alpha value to the luminance.</td>
<td> </td>
</tr>
<tr>
<td>--s_maxTextureSize &lt;size&gt;</td>
<td>Set the texture maximum resolution in the s (x) dimension.</td>
<td> </td>
</tr>
<tr>
<td>--shader</td>
<td>Use OpenGL Shading Language.</td>
<td> </td>
</tr>
<tr>
<td>--t_maxTextureSize &lt;size&gt;</td>
<td>Set the texture maximum resolution in the t (y) dimension.</td>
<td> </td>
</tr>
<tr>
<td>--xMultiplier &lt;multiplier&gt;</td>
<td>Tex coord x multiplier.</td>
<td> </td>
</tr>
<tr>
<td>--xSize &lt;size&gt;</td>
<td>Relative width of rendered brick.</td>
<td> </td>
</tr>
<tr>
<td>--yMultiplier &lt;multiplier&gt;</td>
<td>Tex coord y multiplier.</td>
<td> </td>
</tr>
<tr>
<td>--ySize &lt;size&gt;</td>
<td>Relative length of rendered brick.</td>
<td> </td>
</tr>
<tr>
<td>--zMultiplier &lt;multiplier&gt;</td>
<td>Tex coord z multiplier.</td>
<td> </td>
</tr>
<tr>
<td>--zSize &lt;size&gt;</td>
<td>Relative height of rendered brick.</td>
<td> </td>
</tr>
<tr>
<td>-h or --help</td>
<td>Display this information</td>
<td> </td>
</tr>
<tr>
<td>-n</td>
<td>Create normal map for per voxel lighting.</td>
<td> </td>
</tr>
<tr>
<td>-s &lt;numSlices&gt;</td>
<td>Number of slices to create.</td>
<td>500</td>
</tr>
</tbody>
</table>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Wed, 12 Sep 2012 22:35:24 +0000</pubDate>
		</item>
		<item>
			<title>osgshadow</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/59-osgshadow</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/59-osgshadow</guid>
			<description><![CDATA[<p>The osgshadow example program demonstrates the use of several shadow techniques that are available in osg or that are currently under development.</p>
<h4>Volumetric shadowing</h4>
<p>Not fully implemented yet</p>
<h4>Shadow mapping</h4>
<p>Standard depth shadow mapping</p>
<h4>Soft shadow maps</h4>
<p>Needs shader model 3.0+ support.</p>
<h4>Parallel split shadow maps</h4>
<p>Currently under development</p>
<h4>Program arguments</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>argument</strong></td>
<td><strong>description</strong></td>
</tr>
<tr>
<td>-h or --help</td>
<td>Display this information.</td>
</tr>
<tr>
<td>--positionalLight</td>
<td>Use a positional light.</td>
</tr>
<tr>
<td>--directionalLight</td>
<td>Use a direction light.</td>
</tr>
<tr>
<td>--noUpdate</td>
<td>Disable the updating the of light source.</td>
</tr>
<tr>
<td>--base</td>
<td>Add a base geometry to test shadows.</td>
</tr>
<tr>
<td>--sv</td>
<td>Select ShadowVolume implementation.</td>
</tr>
<tr>
<td>--ssm</td>
<td>Select SoftShadowMap implementation.</td>
</tr>
<tr>
<td>--sm</td>
<td>Select ShadowMap implementation.</td>
</tr>
<tr>
<td>--pssm</td>
<td>Select ParallelSplitShadowMap implementation.</td>
</tr>
<tr>
<td>--mapcount</td>
<td>ParallelSplitShadowMap texture count.</td>
</tr>
<tr>
<td>--mapres</td>
<td>ParallelSplitShadowMap texture resolution.</td>
</tr>
<tr>
<td>--debug-color</td>
<td>ParallelSplitShadowMap display debugging color (only the first 3 maps are color r=0,g=1,b=2.")</td>
</tr>
<tr>
<td>--minNearSplit</td>
<td>ParallelSplitShadowMap shadow map near offset.</td>
</tr>
<tr>
<td>--maxFarDist</td>
<td>ParallelSplitShadowMap max far distance to shadow.</td>
</tr>
<tr>
<td>--moveVCamFactor</td>
<td>ParallelSplitShadowMap move the virtual frustum behind the real camera, (also back ground object can cast shadow).</td>
</tr>
<tr>
<td>--NVidea</td>
<td>ParallelSplitShadowMap set default PolygonOffset for NVidea.</td>
</tr>
<tr>
<td>--<span class="missing wiki">PolyOffset</span>-Factor</td>
<td>ParallelSplitShadowMap set PolygonOffset factor.</td>
</tr>
<tr>
<td>--<span class="missing wiki">PolyOffset</span>-Unit"</td>
<td>ParallelSplitShadowMap set PolygonOffset unit.</td>
</tr>
<tr>
<td>--CullFaceFront</td>
<td>ParallelSplitShadowMap add a cull face: front.</td>
</tr>
<tr>
<td>-1</td>
<td>Use test model one.</td>
</tr>
<tr>
<td>-2</td>
<td>Use test model two.</td>
</tr>
<tr>
<td>-3</td>
<td>Use test model three.</td>
</tr>
<tr>
<td>--two-sided</td>
<td>Use two-sided stencil extension for shadow volumes.</td>
</tr>
<tr>
<td>--two-pass</td>
<td>Use two-pass stencil for shadow volumes.</td>
</tr>
</tbody>
</table>
<h4 id="Keyhandlers">Key handlers</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>key</strong></td>
<td><strong>description</strong></td>
</tr>
<tr>
<td>1</td>
<td>Select trackballmanipulator</td>
</tr>
<tr>
<td>2</td>
<td>Select flightmanipulator</td>
</tr>
<tr>
<td>3</td>
<td>Select drivemanipulator</td>
</tr>
<tr>
<td>4</td>
<td>Select terrainmanipulator</td>
</tr>
<tr>
<td>5</td>
<td>Select animationpathmanipulator</td>
</tr>
<tr>
<td>s</td>
<td>Cycle through statistics modes</td>
</tr>
<tr>
<td>w</td>
<td>Cycle through solid, wire and point modes</td>
</tr>
<tr>
<td>l</td>
<td>Toggle lighting</td>
</tr>
<tr>
<td>t</td>
<td>Toggle textures</td>
</tr>
</tbody>
</table>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Wed, 12 Sep 2012 22:39:03 +0000</pubDate>
		</item>
		<item>
			<title>osgmemorytest</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/60-osgmemorytest</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/60-osgmemorytest</guid>
			<description><![CDATA[<div id="content" class="wiki">
<div class="wikipage searchable">This example is written with the intent of testing out the capabilities of our hardware/drivers/OS's to allocate lots of windows/pbuffers on the window manage side, and lots of FBO's, texture and geometries on the OpenGL object side.<br />
<p>This example has a couple of specific uses - first up it's educational - we can quickly test just how many objects we can throw at our systems and expect them to run, secondly its a diagnostic tool - so when things go wrong we can use it too recreate the problems we see in our own apps but with a small focused code set, finally it's a way of comparing capabilities across platforms/drivers - which in turn might lead back to diagnostics on problem platforms. <br /> Be warned that by pushing things too far, you can start stalling the machine or even crashing it in extreme cases where the OpenGL driver is misbehaving.</p>
<h4 id="Usageexamples">Usage examples</h4>
1) How many windows can I open?<br />Try to open 1000 windows:</div>
<pre>osgmemorytest --window -c 1000</pre>
<p>2) How many pbuffers can I open?<br />Try to open 1000 pbuffers:</p>
<pre>osgmemorytest --pbuffer -c 1000</pre>
<p>3) How many texture objects can I open?<br />Try to open 10000 256x256 RGB textures:</p>
<pre>osgmemorytest --texture 256 256 -g 10000</pre>
<p>4) How many display listed based geometry objects can I open?<br />Try to open 10000 32x32 geometry tile:</p>
<pre>osgmemorytest --geometry 32 32 -g 10000</pre>
<p>5) How many vertex buffer object based geometry objects can I open?<br />Try to open 10000 32x32 geometry tile:</p>
<pre>osgmemorytest --geometry-vbo 32 32 -g 10000</pre>
<p>6) How many vertex array geometry objects can I open?<br />Try to open 10000 32x32 geometry tile:</p>
<pre>osgmemorytest --geometry-va 32 32 -g 10000</pre>
<p>7) How many display listed geometry objects can I open?<br />Try to open 1000 256x256 fbo's</p>
<pre>osgmemorytest --fbo 256 256 -g 1000</pre>
<p>8) How many display listed geometry objects can I open?<br />Try to open 1000 1024x1024 fbo's</p>
<pre>osgmemorytest --fbo 1024 1024 -g 1000</pre>
<p>9) How many display listed geometry objects can I open?<br />Try to open 1000 2048x2048 fbo's</p>
<pre>osgmemorytest --fbo 2048 2048 -g 1000</pre>
<p> </p>
</div>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Wed, 12 Sep 2012 22:52:52 +0000</pubDate>
		</item>
		<item>
			<title>osgPlugins</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/61-osgplugins</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/61-osgplugins</guid>
			<description><![CDATA[<p>There are 45 plugins in the core OpenSceneGraph distribution, and these provide the support for reading and writing both native and 3rd party file formats, details of these are below. Other plugins are available in the Community <span class="wiki">Plugins</span> section.</p>
<h3 id="Invokingaplugintoloadorsavedata">Invoking a plugin to load or save data</h3>
<p>The OpenSceneGraph database plugin library osgDB automatically loads plugins on demand, using the extension of the file being loaded/saved to determine which plugin to load.</p>
<p>For example,</p>
<pre>&gt; osgviewer cow.osg
</pre>
<p>loads the osgdb_osg plugin to read a .osg file, while</p>
<pre>&gt; osgviewer model.flt
</pre>
<p>loads the osgdb_flt plugin to read a .flt file.</p>
<p>If the plugin supports more than one extension, it may be necessary to pre-load the plugin before loading the file by using the standard osgViewer '-e <em>ext'</em> option:</p>
<pre>&gt; osgviewer -e lwo model.lw</pre>
<p>loads the osgdb_lwo plugin to read a .lw file.</p>
<p>When programming use the follow API to read a file:</p>
<pre>#include &lt;osgDB/ReadFile&gt;

osg::ref_ptr&lt;Node&gt; node = osgDB::readNodeFile("cow.osg");
osg::ref_ptr&lt;Image&gt; image = osgDB::readImageFile("lz.rgb");
</pre>
<p>Or, to write a file:</p>
<pre>#include &lt;osgDB/WriteFile&gt;
osgDB::writeNodeFile(*node, "saved.osg");
</pre>
<p>The loading of the necessary plugins by osgDB is transparent and in practice you shouldn't have to do anything special to load a certain file type. The only factors to keep in mind are that OSG needs to support the file format (as determined by the file's extension) and that you should have compiled the necessary plugin.</p>
<h4 id="Listofavailable3ddatabaseplugins">List of available 3d database plugins</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>Plugin name</strong></td>
<td><strong>Description</strong></td>
<td><strong>Extensions</strong></td>
<td><strong>Read</strong></td>
<td><strong>Write</strong></td>
<td><strong>Notes</strong></td>
</tr>
<tr>
<td>3dc</td>
<td>3DC point cloud reader</td>
<td>.3dc .asc</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>3ds</td>
<td>3D Studio</td>
<td>.3ds</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>ac3d</td>
<td>AC3D modeler</td>
<td>.ac</td>
<td>yes</td>
<td>yes</td>
<td><a class="ext-link" href="http://www.inivis.com/"><span class="icon">http://www.inivis.com/</span></a></td>
</tr>
<tr>
<td>bsp</td>
<td>Quake3 BSP</td>
<td>.bsp</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>dae</td>
<td>COLLADA 1.4.x</td>
<td>.dae</td>
<td>yes</td>
<td>yes</td>
<td>Requires Collada DOM library. See <a href="https://www.openscenegraph.com/projects/osg/wiki/Support/KnowledgeBase/Collada">Collada plugin</a> details</td>
</tr>
<tr>
<td>dw</td>
<td>Design Workshop Database</td>
<td>.dw</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>dxf</td>
<td>Autodesk DXF Reader</td>
<td>.dxf</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>fbx</td>
<td>Autodesk FBX</td>
<td>.fbx</td>
<td>yes</td>
<td>yes</td>
<td>Requires <a class="ext-link" href="http://www.autodesk.com/fbx"><span class="icon">Autodesk's FBX SDK</span></a>. If using <a href="http://www.openscenegraph.com/">OpenSceneGraph</a> 2.8.x you'll need version 2010.2 of the SDK. Otherwise check <a href="https://www.openscenegraph.com/projects/osg/browser/OpenSceneGraph/trunk/src/osgPlugins/fbx/ReaderWriterFBX.h">ReaderWriterFBX.h</a> to see which version of the SDK is required (currently 2012.1). If you have problems loading an FBX model please check that it works in Autodesk's <a class="ext-link" href="http://www.autodesk.com/fbx"><span class="icon">FBX QuickTime Viewer</span></a> first to see if the model was correctly exported.</td>
</tr>
<tr>
<td>geo</td>
<td>Geo</td>
<td>.gem .geo</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>Inventor</td>
<td>Open Inventor format</td>
<td>.iv .wrl</td>
<td>yes</td>
<td>yes</td>
<td>.wrl Only VRML1.0</td>
</tr>
<tr>
<td>ive</td>
<td><strong>Native osg binary</strong></td>
<td>.ive</td>
<td>yes</td>
<td>yes</td>
<td>May also read/write (internal) images</td>
</tr>
<tr>
<td>logo</td>
<td>Logo database</td>
<td>.logo</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>lwo</td>
<td>Lightwave Object</td>
<td>.lwo .lw .geo</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>lws</td>
<td>Lightwave Scene</td>
<td>.lws</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>md2</td>
<td>Quake MD2</td>
<td>.md2</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>obj</td>
<td>Alias Wavefront</td>
<td>.obj</td>
<td>yes</td>
<td>yes</td>
<td>Also writes materials to .mtl</td>
</tr>
<tr>
<td>ogr</td>
<td> </td>
<td>.ogr</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>Openflight</td>
<td>Multigen Openflight</td>
<td>.flt</td>
<td>yes</td>
<td>yes</td>
<td>See <a href="https://www.openscenegraph.com/index.php/documentation/knowledge-base/52-using-the-openflight-plugin">OpenFlight plugin</a> details</td>
</tr>
<tr>
<td>osg</td>
<td><strong>Native osg ascii</strong></td>
<td>.osg</td>
<td>yes</td>
<td>yes</td>
<td>Currently the writer supports OVERRIDE/PROTECTED flags in "<a class="missing wiki" href="https://www.openscenegraph.com/projects/osg/wiki/StateSets" rel="nofollow">StateSets</a>" only for "Modes" and not for "<a class="missing wiki" href="https://www.openscenegraph.com/projects/osg/wiki/StateAttributes" rel="nofollow">StateAttributes</a>".</td>
</tr>
<tr>
<td>pfb</td>
<td>Performer loader</td>
<td>All extensions supported by Performer loaders</td>
<td>yes</td>
<td>no</td>
<td>Requires Performer library</td>
</tr>
<tr>
<td>shp</td>
<td>ESRI Shapefile</td>
<td>.shp</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>stl</td>
<td>Stereolithography file</td>
<td>.stl .sta</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>vrml</td>
<td>VRML2</td>
<td>.wrl</td>
<td>yes</td>
<td>no</td>
<td>Requires OpenVRML library</td>
</tr>
<tr>
<td>x</td>
<td>DirectX 3D model</td>
<td>.x</td>
<td>yes</td>
<td>no</td>
</tr>
</tbody>
</table>
<h4 id="Listofavailablemovieimageplugins">List of available movie &amp; image plugins</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>Plugin name</strong></td>
<td><strong>Description</strong></td>
<td><strong>Extensions</strong></td>
<td><strong>Read</strong></td>
<td><strong>Write</strong></td>
<td><strong>Notes</strong></td>
</tr>
<tr>
<td>bmp</td>
<td>Window bitmap</td>
<td>.bmp</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>dds</td>
<td>DirectX image format</td>
<td>.dds</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>gdal</td>
<td>GDAL image loaders</td>
<td>All extensions supported by GDAL</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>gif</td>
<td>GIF Image</td>
<td>.gif</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>hdr</td>
<td>High Dynamic Range image</td>
<td>.hdr</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>jp2</td>
<td> </td>
<td>.jps .jpc</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>jpeg</td>
<td>Jpeg image</td>
<td>.jpeg .jpg</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>ktx</td>
<td>Khronos KTX texture image</td>
<td>.ktx</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>Openflight</td>
<td>Image attribute files</td>
<td>.attr</td>
<td>yes</td>
<td>yes</td>
<td>Stores additional attributes that are not stored in .rgb files</td>
</tr>
<tr>
<td>pic</td>
<td>PIC image</td>
<td>.pic</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>png</td>
<td>Portable Network Graphics</td>
<td>.png</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>pnm</td>
<td> </td>
<td>.pnm .ppm .pgm .pbm</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>rgb</td>
<td> </td>
<td>.rgb .sgi .rgba .int .inta .bw</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>tga</td>
<td>Targa image</td>
<td>.tga</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>tiff</td>
<td>Tiff image</td>
<td>.tiff .tif</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>quicktime</td>
<td>Quicktime movie loader</td>
<td>.mov .mpg .mpv .mp4 .m4v .dc .avi .flv .swf</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td> </td>
<td>Quicktime image loader</td>
<td>rgb. rgba .jpg .jpeg .tif .tiff .gif .png .pict .pct .tga .psd</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>vtf</td>
<td>Valve Texture Format image</td>
<td>.vtf</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>xine</td>
<td>Xine image stream</td>
<td>.mpg .mpv .db .flv .mov .avi .wmv. xine</td>
<td>yes</td>
<td>no</td>
</tr>
</tbody>
</table>
<h4 id="Listofavailablearchivenetworkingplugins">List of available archive/networking plugins</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>Plugin name</strong></td>
<td><strong>Description</strong></td>
<td><strong>Extensions</strong></td>
<td><strong>Read</strong></td>
<td><strong>Write</strong></td>
<td><strong>Notes</strong></td>
</tr>
<tr>
<td>curl</td>
<td>HTTP Protocol Model</td>
<td>.curl</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>osga</td>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
</tr>
<tr>
<td>txp</td>
<td>Terrapage file</td>
<td>.txp</td>
<td>yes</td>
<td>no</td>
<td>Produced by Terra Vista terrain building tools</td>
</tr>
<tr>
<td>net</td>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
</tr>
<tr>
<td>zip</td>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
</tr>
<tr>
<td>tgz</td>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
</tr>
<tr>
<td>osgtgz</td>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
</tr>
</tbody>
</table>
<h4 id="Listofavailablefontplugins">List of available font plugins</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>Plugin name</strong></td>
<td><strong>Description</strong></td>
<td><strong>Extensions</strong></td>
<td><strong>Read</strong></td>
<td><strong>Write</strong></td>
<td><strong>Notes</strong></td>
</tr>
<tr>
<td>freetype</td>
<td>Freetype font loader</td>
<td>.ttf .ttc .pfb .pfa .cid .cff .cef .fon .fnt</td>
<td>yes</td>
<td>no</td>
</tr>
<tr>
<td>txf</td>
<td>GLU texture font</td>
<td>.txf</td>
<td>yes</td>
<td>no</td>
</tr>
</tbody>
</table>
<h4 id="Listofavailablepseudoloaderplugins">List of available pseudo loader plugins</h4>
<table class="withborder">
<tbody>
<tr>
<td><strong>Plugin name</strong></td>
<td><strong>Description</strong></td>
<td><strong>Extensions</strong></td>
<td><strong>Read</strong></td>
<td><strong>Write</strong></td>
<td><strong>Notes</strong></td>
</tr>
<tr>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
<td> </td>
<td>OSG reader plugins that insert translation, rotation, or scale transforms above geometry loaded by another plugin. These pseudo-loaders make it simple to change the position, orientation, or size of a saved model by specifying a translation, rotation, or scale factor as part of the filename.</td>
</tr>
<tr>
<td>rot</td>
<td>Rotates to the loaded model</td>
<td>.rot</td>
<td> </td>
<td> </td>
<td>Usage: &lt;modelfile.ext&gt;.&lt;rx&gt;,&lt;ry&gt;,&lt;rz&gt;.rot where: &lt;modelfile.ext&gt; = a model filename. &lt;rx&gt; = rotation around X axis [degrees]. &lt;ry&gt; = rotation around Y axis [degrees]. &lt;rz&gt; = rotation around Z axis [degrees].</td>
</tr>
<tr>
<td>scale</td>
<td>Scales the loaded model</td>
<td>.scale</td>
<td> </td>
<td> </td>
<td>Usage: &lt;modelfile.ext&gt;.&lt;sx&gt;,&lt;sy&gt;,&lt;sz&gt;.scale &lt;modelfile.ext&gt;.&lt;su&gt;.scale where: &lt;modelfile.ext&gt; = a model filename. &lt;sx&gt; = scale factor along the X axis. &lt;sy&gt; = scale factor along the Y axis. &lt;sz&gt; = scale factor along the Z axis. &lt;su&gt; = uniform scale factor applied to all axes.</td>
</tr>
<tr>
<td>trans</td>
<td>Translates the loaded model</td>
<td>.trans</td>
<td> </td>
<td> </td>
<td>Usage: &lt;modelfile.ext&gt;.&lt;tx&gt;,&lt;ty&gt;,&lt;tz&gt;.trans where: &lt;modelfile.ext&gt; = a model filename. &lt;tx&gt; = translation along the X axis. &lt;ty&gt; = translation along the Y axis.. &lt;tz&gt; = translation along the Z axis.</td>
</tr>
<tr>
<td>normals</td>
<td>Shows normals of the loaded model</td>
<td>.normals</td>
<td> </td>
<td> </td>
<td>Usage: [-O options] &lt;model.ext&gt;.normals options: "scale=&lt;scale&gt;" (default = 1.0) "mode=&lt;VertexNormals|SurfaceNormals&gt;" (default = VertexNormals)</td>
</tr>
</tbody>
</table>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Mon, 17 Sep 2012 23:53:35 +0000</pubDate>
		</item>
		<item>
			<title>Stereo settings</title>
			<link>https://www.openscenegraph.com/index.php/documentation/guides/user-guides/62-stereo-settings</link>
			<guid isPermaLink="true">https://www.openscenegraph.com/index.php/documentation/guides/user-guides/62-stereo-settings</guid>
			<description><![CDATA[<p>The OSG has support for anaglyphic stereo (i.e. red/green or red/cyan glasses), quad buffered stereo (i.e. active stereo using shutter glasses, or passive stereo using polarized projectors &amp; glasses) and horizontal and vertical split window stereo implementations. Almost all OSG applications have the potential for stereo support simply by setting the relevant environmental variables, or via command line arguments. Little or no code changes will be required, the support is handled transparently inside osgUtil::<span class="missing wiki">SceneView</span>'s handling of rendering. It is a simple as:</p>
<pre>osgviewer --stereo cow.osg
</pre>
<p>If the user is planning to use head tracked stereo, or a cave then it is currently recommend to set it up via a VR toolkit such as VRjuggler, in this case refer to the VR toolkits handling of stereo, and keep all the OSG's stereo specific environment variables (below) set to OFF, or set the values to off within own your own applications.</p>
<h4 id="Theenvironmentalvariablesofinterest:">The environmental variables of interest:</h4>
<table class="withborder">
<tbody>
<tr>
<td>OSG_STEREO</td>
<td>ON</td>
<td>Turn stereo on</td>
</tr>
<tr>
<td> </td>
<td>OFF</td>
<td>Turn stereo off (default).</td>
</tr>
<tr>
<td>OSG_STEREO_MODE</td>
<td>ANAGLYPHIC</td>
<td>Use anaglyphic stereo when in stereo (default).</td>
</tr>
<tr>
<td> </td>
<td>QUAD_BUFFER</td>
<td>Use quad buffered stereo when in stereo.</td>
</tr>
<tr>
<td> </td>
<td>HORIZONTAL_SPLIT</td>
<td>Use horizontal split stereo mode when in stereo</td>
</tr>
<tr>
<td> </td>
<td>VERTICAL_SPLIT</td>
<td>Use vertical split stereo mode when in stereo</td>
</tr>
<tr>
<td>OSG_SCREEN_DISTANCE</td>
<td>0.50</td>
<td>Set the distance the viewer is from screen in metres (default shown)</td>
</tr>
<tr>
<td>OSG_SCREEN_HEIGHT</td>
<td>0.26</td>
<td>Set the height of image on the screen in metres (default shown)</td>
</tr>
<tr>
<td>OSG_SCREEN_WIDTH</td>
<td>0.325</td>
<td>Set the width of image on the screen in metres (default shown)</td>
</tr>
<tr>
<td>OSG_EYE_SEPARATION</td>
<td>0.06</td>
<td>Set the eye separation - interoccular distance (default shown.)</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_HORIZONTAL_SEPARATION</td>
<td>42</td>
<td>Set the number of pixels between the left and right viewports (default shown).</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_HORIZONTAL_EYE_MAPPING</td>
<td>LEFT_EYE_LEFT_VIEWPORT</td>
<td>Set the left eye to render to left viewport, right eye to right viewport (default).</td>
</tr>
<tr>
<td> </td>
<td>LEFT_EYE_RIGHT_VIEWPORT</td>
<td>Set the left eye to render to right viewport, right eye to left viewport.</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_VERTICAL_SEPARATION</td>
<td>42</td>
<td>Set the number of pixels between the top and bottom viewports (default shown).</td>
</tr>
<tr>
<td>OSG_SPLIT_STEREO_VERTICAL_EYE_MAPPING</td>
<td>LEFT_EYE_TOP_VIEWPORT</td>
<td>Set the left eye to render to top viewport, right eye to bottom viewport (default).</td>
</tr>
<tr>
<td> </td>
<td>LEFT_EYE_BOTTOM_VIEWPORT</td>
<td>Set the left eye to render to bottom viewport, right eye to top viewport.</td>
</tr>
</tbody>
</table>
<h4 id="Commandlineargumentscanbeusedtooverridethesesettings:">Command line arguments can be used to override these settings:</h4>
<table class="withborder">
<tbody>
<tr>
<td>--stereo</td>
<td> </td>
<td>Switch on stereo.</td>
</tr>
<tr>
<td>--stereo</td>
<td>ON</td>
<td>Switch on stereo.</td>
</tr>
<tr>
<td> </td>
<td>OFF</td>
<td>Switch off stereo.</td>
</tr>
<tr>
<td> </td>
<td>ANAGLYPHIC</td>
<td>Switch on ANAGLYPHIC stereo.</td>
</tr>
<tr>
<td> </td>
<td>QUAD_BUFFER</td>
<td>Switch on QUAD_BUFFER stereo.</td>
</tr>
<tr>
<td> </td>
<td>VERTICAL_SPLIT</td>
<td>Switch on VERTICAL_SPLIT stereo.</td>
</tr>
<tr>
<td> </td>
<td>HORIZONTAL_SPLIT</td>
<td>Switch on HORIZONTAL_SPLIT stereo.</td>
</tr>
</tbody>
</table>
<h4 id="Examples:">Examples:</h4>
<p>To invoke stereo from the comandline:</p>
<pre>osgviewer --stereo cow.osg
</pre>
<p>To invoke quad buffered stereo from the commandline:</p>
<pre>osgviewer -stereo QUAD_BUFFER cow.osg
</pre>
<p>To force all apps to start up in quad buffered stereo (if system supports it)</p>
<pre class="wiki">export OSG_STEREO=ON
export OSG_STEREO_MODE=QUAD_BUFFER
osgviewer cow.osg
</pre>
<p>To set quad buffered stereo to the default, but use the commandline to switch stereo on:</p>
<pre>export OSG_STEREO=OFF
export OSG_STEREO_MODE=QUAD_BUFFER
osgviewer -stereo cow.osg
</pre>
<h4 id="Sizematters:">Size matters:</h4>
<p>For appropriate depth perception the stereo code creates separate left and right eye views, both the frustum and modelview are shifted to account for the separate eye views. To achieve the right amount of adjustment the OSG requires the users eye separation, the distance from the eyes to the screen and the height of the screen. The OSG will use the defaults of 0.05m,0.5m and 0.26m respectively which are assumed to be reasonable defaults for most users workstation configurations, note the OSG_SCREEN_HEIGHT is the image height rather than total size of your monitor/display surface. For the best stereo effects please measure these values and set them up via the environmental variables. Once set the views you get should give improved depth perception. A good way of measuring how well you are configured for your display is to fly away from objects (using the FlightManipulator for instance, but not the TrackballManipulator, see below) so that they go of toward infinity. As they move away the offset between the two images should tend towards your eye separation, if you achieve this then the object will be perceived as at infinity.</p>]]></description>
			<author>jtorresfabra@gmail.com (openscenegraph)</author>
			<category>User Guides</category>
			<pubDate>Tue, 18 Sep 2012 00:09:23 +0000</pubDate>
		</item>
	</channel>
</rss>
