<?xml version="1.0" encoding="utf-8"?>
<!-- generator="Joomla! - Open Source Content Management" -->
<feed xmlns="http://www.w3.org/2005/Atom"  xml:lang="en-gb">
	<title type="text">Virtual Planet Builder</title>
	<subtitle type="text">Project website for OpenSceneGraph</subtitle>
	<link rel="alternate" type="text/html" href="https://www.openscenegraph.com"/>
	<id>https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder</id>
	<updated>2024-02-07T17:03:55+00:00</updated>
	<author>
		<name>OpenSceneGraph</name>
		<email>robert@openscenegraph.com</email>
	</author>
	<generator uri="https://www.joomla.org">Joomla! - Open Source Content Management</generator>
	<link rel="self" type="application/atom+xml" href="https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder?format=feed&amp;type=atom"/>
	<entry>
		<title>Commandline options</title>
		<link rel="alternate" type="text/html" href="https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/119-commandline-options"/>
		<published>2013-02-15T01:56:19+00:00</published>
		<updated>2013-02-15T01:56:19+00:00</updated>
		<id>https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/119-commandline-options</id>
		<author>
			<name>openscenegraph</name>
			<email>jtorresfabra@gmail.com</email>
		</author>
		<summary type="html">&lt;h2 id=&quot;CommonCommandlineoptions&quot;&gt;Common Commandline options&lt;/h2&gt;
&lt;table class=&quot;withborder&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Parameter&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Default&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-h or --help&lt;/td&gt;
&lt;td&gt;Display commandline arguments information&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--task&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-s &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify a VPB source file containing all commandline options.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--so &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Output the VPB source file for the current run.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--report&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--cache &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Read the cache file to use a look up for locally cached files.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--version&lt;/td&gt;
&lt;td&gt;Print out version&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--version-number&lt;/td&gt;
&lt;td&gt;Print out version number only.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--comment&lt;/td&gt;
&lt;td&gt;Added a comment/description string to the top most node in the dataset&lt;/td&gt;
&lt;td&gt;empty&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--split&lt;/td&gt;
&lt;td&gt;Set the distributed build split level.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--splits&lt;/td&gt;
&lt;td&gt;Set the distributed build primary and secondary split levels.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--run-path&lt;/td&gt;
&lt;td&gt;Set the path that the build should be run from.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--notify-level&lt;/td&gt;
&lt;td&gt;Set the notify level when logging messages.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-d &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the digital elevation map input file to process&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-t &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the texture map input file to process&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--building &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify building outlines using shapefiles.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--forest &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify forest outlines using shapefiles&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--levels &amp;lt;begin_level&amp;gt; &amp;lt;end_level&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the range of levels that the next source Texture or DEM will contribute to.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--layer &amp;lt;layer_num&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the layer that the next source Texture will contribute to..&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Coordinate system&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--cs &amp;lt;coordinates system string&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system of source imagery, DEM or destination database. The string may be any of the usual GDAL/OGR forms, complete WKT, PROJ.4, EPS&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--wkt &amp;lt;WKT string&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system of source imagery, DEM or destination database in WellKownText form.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--wkt-file &amp;lt;WKT file&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system of source imagery, DEM or destination database by as file containing WellKownText definition.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Geocentric database&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--geocentric&lt;/td&gt;
&lt;td&gt;Build a database in geocentric (i.e. whole earth) database.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--bluemarble-east&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to represent the eastern hemisphere of the earth.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--bluemarble-west&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to represent the western hemisphere of the earth.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--whole-globe&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to represent the whole hemisphere of the earth.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Ellipsoid model&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--radius-polar&lt;/td&gt;
&lt;td&gt;Set the polar radius of the ellipsoid model when building a geocentric database.&lt;/td&gt;
&lt;td&gt;6356752.3142&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--radius-equator&lt;/td&gt;
&lt;td&gt;Set the equatorial radius of the ellipsoid model when building a geocentric database.&lt;/td&gt;
&lt;td&gt;6378137&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--spherical&lt;/td&gt;
&lt;td&gt;Set the polar and equatorial radius both to the average of the two.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Flat database&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--range &amp;lt;xMin&amp;gt; &amp;lt;xMax&amp;gt; &amp;lt;yMin&amp;gt; &amp;lt;yMax&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to the given range.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--xx&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--xt&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--yy&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--yt&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--zz&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--zt&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;DataType&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--vector&lt;/td&gt;
&lt;td&gt;Interpret input as a vector data set&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--raster&lt;/td&gt;
&lt;td&gt;Interpret input as a raster data set (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--image-ext &amp;lt;ext&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the Image format to output to via its plugin name, i.e. rgb, dds, jp2, jpeg.&lt;/td&gt;
&lt;td&gt;.dds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-o &amp;lt;outputfile&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the output master file to generate&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-a &amp;lt;archivename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the archive to place the generated database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--ibn &amp;lt;buildname&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the intermediate build file name&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-l &amp;lt;numOfLevels&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the number of PagedLOD levels to generate&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-e &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;w&amp;gt; &amp;lt;h&amp;gt;&lt;/td&gt;
&lt;td&gt;Extents of the model to generate&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ge &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;w&amp;gt; &amp;lt;h&amp;gt;&lt;/td&gt;
&lt;td&gt;Geographic (Lat/Lon) Extents of the model to generate.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-b &amp;lt;xa&amp;gt; &amp;lt;ya&amp;gt; &amp;lt;xb&amp;gt; &amp;lt;yb&amp;gt;&lt;/td&gt;
&lt;td&gt;Bounds (similar to extents) of the model to generate. Max/Min order is not important.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-gb &amp;lt;xa&amp;gt; &amp;lt;ya&amp;gt; &amp;lt;xb&amp;gt; &amp;lt;yb&amp;gt;&lt;/td&gt;
&lt;td&gt;Geographic Bounds (similar to extents) of the model to generate. Max/Min order is not important.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--skirt-ratio &amp;lt;float&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the ratio of skirt height to tile size&lt;/td&gt;
&lt;td&gt;0.02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;Set the vertical multiplier&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-terrain-simplification&lt;/td&gt;
&lt;td&gt;Switch off terrain simplification.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--default-color &amp;lt;r,g,b,a&amp;gt;&lt;/td&gt;
&lt;td&gt;Sets the default color of the terrain.&lt;/td&gt;
&lt;td&gt;(0.5, 0.5, 1.0, 1.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--radius-to-max-visible-distance-ratio&lt;/td&gt;
&lt;td&gt;Set the maximum visible distance ratio for all tiles apart from the top most tile. The maximum visible distance is computed from the ratio * tile radius.&lt;/td&gt;
&lt;td&gt;7.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--max-anisotropy&lt;/td&gt;
&lt;td&gt;Max anisotropy level to use when texturing&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;a class=&quot;missing wiki&quot; href=&quot;http://www.openscenegraph.org/projects/VirtualPlanetBuilder/wiki/GeometryType&quot; rel=&quot;nofollow&quot;&gt;GeometryType?&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--HEIGHT_FIELD&lt;/td&gt;
&lt;td&gt;Create a height field database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--POLYGONAL&lt;/td&gt;
&lt;td&gt;Create a height field database (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--TERRAIN&lt;/td&gt;
&lt;td&gt;Create a osgTerrain::Terrain database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;a class=&quot;missing wiki&quot; href=&quot;http://www.openscenegraph.org/projects/VirtualPlanetBuilder/wiki/DatabaseType&quot; rel=&quot;nofollow&quot;&gt;DatabaseType?&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--LOD&lt;/td&gt;
&lt;td&gt;Create a LOD'd database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--PagedLOD&lt;/td&gt;
&lt;td&gt;Create a PagedLOD'd database (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;span class=&quot;missing wiki&quot;&gt;TextureType&lt;/span&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--compressed&lt;/td&gt;
&lt;td&gt;Use OpenGL compression on RGB destination imagery (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGBA-compressed&lt;/td&gt;
&lt;td&gt;Use OpenGL compression on RGBA destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGB-16&lt;/td&gt;
&lt;td&gt;Use 16bit RGB destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGB-24&lt;/td&gt;
&lt;td&gt;Use 24bit RGB destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGBA-16&lt;/td&gt;
&lt;td&gt;Use 16bit RGBA destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGBA&lt;/td&gt;
&lt;td&gt;Use 32bit RGBA destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;MipMappingMode&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-mip-mapping&lt;/td&gt;
&lt;td&gt;Disable mip mapping of textures&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--mip-mapping-hardware&lt;/td&gt;
&lt;td&gt;Use mip mapped textures, and generate the mipmaps in hardware when available.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--mip-mapping-imagery&lt;/td&gt;
&lt;td&gt;Use mip mapped textures, and generate the mipmaps in imagery. (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--BuildOverlays [True/False]&lt;/td&gt;
&lt;td&gt;Switch on/off the building of overlay within the source imagery. Overlays can help reduce texture aliasing artifacts.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--ReprojectSources [True/False]&lt;/td&gt;
&lt;td&gt;Switch on/off the reprojection of any source imagery that aren't in the correct projection for the database build.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--GenerateTiles [True/False]&lt;/td&gt;
&lt;td&gt;Switch on/off the generation of the output database tiles.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--tile-image-size&lt;/td&gt;
&lt;td&gt;Set the tile maximum image size&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--tile-terrain-size&lt;/td&gt;
&lt;td&gt;Set the tile maximum terrain size&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-O&lt;/td&gt;
&lt;td&gt;string option to pass to write plugins, use &quot;&quot; for multiple options&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--subtile &amp;lt;LOD&amp;gt; &amp;lt;X&amp;gt; &amp;lt;Y&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the subtile to begin the build from.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--record-subtile-on-leaf-tiles&lt;/td&gt;
&lt;td&gt;Enable the setting of the subtile file name of the leaf tiles.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--type-attribute&lt;/td&gt;
&lt;td&gt;Set the type name which specify how the shapes should be interpreted in shapefile/dbase files. (empty signifies no type attribute has been defined)&lt;/td&gt;
&lt;td&gt;NAME&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--height-attribute&lt;/td&gt;
&lt;td&gt;Set the attribute name for height attributes used in shapefile/dbase files.&lt;/td&gt;
&lt;td&gt;HGT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--height&lt;/td&gt;
&lt;td&gt;Set the height to use for associated shapefiles. (negative signifies that no height has been defined)&lt;/td&gt;
&lt;td&gt;-1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--mask&lt;/td&gt;
&lt;td&gt;Set the mask to assign indivual shapefile/model.&lt;/td&gt;
&lt;td&gt;0xffffffff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--terrain-mask&lt;/td&gt;
&lt;td&gt;Set the overall mask to assign terrain.&lt;/td&gt;
&lt;td&gt;0xffffffff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--read-threads-ratio &amp;lt;ratio&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the ratio number of read threads relative to number of cores to use.&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--write-threads-ratio &amp;lt;ratio&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the ratio number of write threads relative to number of cores to use.&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--build-options &amp;lt;string&amp;gt;&lt;/td&gt;
&lt;td&gt;Set build options string.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;DEM interpolation&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--interpolate-terrain&lt;/td&gt;
&lt;td&gt;Enable the use of interpolation when sampling data from source DEMs. (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-interpolate-terrain&lt;/td&gt;
&lt;td&gt;Disable the use of interpolation when sampling data from source DEMs.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Imagery interpolation&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--interpolate-imagery&lt;/td&gt;
&lt;td&gt;Enable the use of interpolation when sampling data from source imagery. (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-interpolate-imagery&lt;/td&gt;
&lt;td&gt;Disable the use of interpolation when sampling data from source imagery.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
		<content type="html">&lt;h2 id=&quot;CommonCommandlineoptions&quot;&gt;Common Commandline options&lt;/h2&gt;
&lt;table class=&quot;withborder&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Parameter&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Default&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-h or --help&lt;/td&gt;
&lt;td&gt;Display commandline arguments information&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--task&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-s &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify a VPB source file containing all commandline options.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--so &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Output the VPB source file for the current run.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--report&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--cache &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Read the cache file to use a look up for locally cached files.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--version&lt;/td&gt;
&lt;td&gt;Print out version&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--version-number&lt;/td&gt;
&lt;td&gt;Print out version number only.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--comment&lt;/td&gt;
&lt;td&gt;Added a comment/description string to the top most node in the dataset&lt;/td&gt;
&lt;td&gt;empty&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--split&lt;/td&gt;
&lt;td&gt;Set the distributed build split level.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--splits&lt;/td&gt;
&lt;td&gt;Set the distributed build primary and secondary split levels.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--run-path&lt;/td&gt;
&lt;td&gt;Set the path that the build should be run from.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--notify-level&lt;/td&gt;
&lt;td&gt;Set the notify level when logging messages.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-d &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the digital elevation map input file to process&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-t &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the texture map input file to process&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--building &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify building outlines using shapefiles.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--forest &amp;lt;filename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify forest outlines using shapefiles&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--levels &amp;lt;begin_level&amp;gt; &amp;lt;end_level&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the range of levels that the next source Texture or DEM will contribute to.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--layer &amp;lt;layer_num&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the layer that the next source Texture will contribute to..&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Coordinate system&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--cs &amp;lt;coordinates system string&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system of source imagery, DEM or destination database. The string may be any of the usual GDAL/OGR forms, complete WKT, PROJ.4, EPS&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--wkt &amp;lt;WKT string&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system of source imagery, DEM or destination database in WellKownText form.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--wkt-file &amp;lt;WKT file&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system of source imagery, DEM or destination database by as file containing WellKownText definition.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Geocentric database&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--geocentric&lt;/td&gt;
&lt;td&gt;Build a database in geocentric (i.e. whole earth) database.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--bluemarble-east&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to represent the eastern hemisphere of the earth.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--bluemarble-west&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to represent the western hemisphere of the earth.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--whole-globe&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to represent the whole hemisphere of the earth.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Ellipsoid model&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--radius-polar&lt;/td&gt;
&lt;td&gt;Set the polar radius of the ellipsoid model when building a geocentric database.&lt;/td&gt;
&lt;td&gt;6356752.3142&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--radius-equator&lt;/td&gt;
&lt;td&gt;Set the equatorial radius of the ellipsoid model when building a geocentric database.&lt;/td&gt;
&lt;td&gt;6378137&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--spherical&lt;/td&gt;
&lt;td&gt;Set the polar and equatorial radius both to the average of the two.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Flat database&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--range &amp;lt;xMin&amp;gt; &amp;lt;xMax&amp;gt; &amp;lt;yMin&amp;gt; &amp;lt;yMax&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the coordinates system for next texture or dem to the given range.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--xx&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--xt&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--yy&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--yt&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--zz&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--zt&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;DataType&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--vector&lt;/td&gt;
&lt;td&gt;Interpret input as a vector data set&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--raster&lt;/td&gt;
&lt;td&gt;Interpret input as a raster data set (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--image-ext &amp;lt;ext&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the Image format to output to via its plugin name, i.e. rgb, dds, jp2, jpeg.&lt;/td&gt;
&lt;td&gt;.dds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-o &amp;lt;outputfile&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the output master file to generate&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-a &amp;lt;archivename&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the archive to place the generated database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--ibn &amp;lt;buildname&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the intermediate build file name&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-l &amp;lt;numOfLevels&amp;gt;&lt;/td&gt;
&lt;td&gt;Specify the number of PagedLOD levels to generate&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-e &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;w&amp;gt; &amp;lt;h&amp;gt;&lt;/td&gt;
&lt;td&gt;Extents of the model to generate&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ge &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;w&amp;gt; &amp;lt;h&amp;gt;&lt;/td&gt;
&lt;td&gt;Geographic (Lat/Lon) Extents of the model to generate.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-b &amp;lt;xa&amp;gt; &amp;lt;ya&amp;gt; &amp;lt;xb&amp;gt; &amp;lt;yb&amp;gt;&lt;/td&gt;
&lt;td&gt;Bounds (similar to extents) of the model to generate. Max/Min order is not important.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-gb &amp;lt;xa&amp;gt; &amp;lt;ya&amp;gt; &amp;lt;xb&amp;gt; &amp;lt;yb&amp;gt;&lt;/td&gt;
&lt;td&gt;Geographic Bounds (similar to extents) of the model to generate. Max/Min order is not important.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--skirt-ratio &amp;lt;float&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the ratio of skirt height to tile size&lt;/td&gt;
&lt;td&gt;0.02&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;Set the vertical multiplier&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-terrain-simplification&lt;/td&gt;
&lt;td&gt;Switch off terrain simplification.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--default-color &amp;lt;r,g,b,a&amp;gt;&lt;/td&gt;
&lt;td&gt;Sets the default color of the terrain.&lt;/td&gt;
&lt;td&gt;(0.5, 0.5, 1.0, 1.0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--radius-to-max-visible-distance-ratio&lt;/td&gt;
&lt;td&gt;Set the maximum visible distance ratio for all tiles apart from the top most tile. The maximum visible distance is computed from the ratio * tile radius.&lt;/td&gt;
&lt;td&gt;7.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--max-anisotropy&lt;/td&gt;
&lt;td&gt;Max anisotropy level to use when texturing&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;a class=&quot;missing wiki&quot; href=&quot;http://www.openscenegraph.org/projects/VirtualPlanetBuilder/wiki/GeometryType&quot; rel=&quot;nofollow&quot;&gt;GeometryType?&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--HEIGHT_FIELD&lt;/td&gt;
&lt;td&gt;Create a height field database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--POLYGONAL&lt;/td&gt;
&lt;td&gt;Create a height field database (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--TERRAIN&lt;/td&gt;
&lt;td&gt;Create a osgTerrain::Terrain database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;a class=&quot;missing wiki&quot; href=&quot;http://www.openscenegraph.org/projects/VirtualPlanetBuilder/wiki/DatabaseType&quot; rel=&quot;nofollow&quot;&gt;DatabaseType?&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--LOD&lt;/td&gt;
&lt;td&gt;Create a LOD'd database&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--PagedLOD&lt;/td&gt;
&lt;td&gt;Create a PagedLOD'd database (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;span class=&quot;missing wiki&quot;&gt;TextureType&lt;/span&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--compressed&lt;/td&gt;
&lt;td&gt;Use OpenGL compression on RGB destination imagery (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGBA-compressed&lt;/td&gt;
&lt;td&gt;Use OpenGL compression on RGBA destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGB-16&lt;/td&gt;
&lt;td&gt;Use 16bit RGB destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGB-24&lt;/td&gt;
&lt;td&gt;Use 24bit RGB destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGBA-16&lt;/td&gt;
&lt;td&gt;Use 16bit RGBA destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--RGBA&lt;/td&gt;
&lt;td&gt;Use 32bit RGBA destination imagery&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;MipMappingMode&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-mip-mapping&lt;/td&gt;
&lt;td&gt;Disable mip mapping of textures&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--mip-mapping-hardware&lt;/td&gt;
&lt;td&gt;Use mip mapped textures, and generate the mipmaps in hardware when available.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--mip-mapping-imagery&lt;/td&gt;
&lt;td&gt;Use mip mapped textures, and generate the mipmaps in imagery. (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--BuildOverlays [True/False]&lt;/td&gt;
&lt;td&gt;Switch on/off the building of overlay within the source imagery. Overlays can help reduce texture aliasing artifacts.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--ReprojectSources [True/False]&lt;/td&gt;
&lt;td&gt;Switch on/off the reprojection of any source imagery that aren't in the correct projection for the database build.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--GenerateTiles [True/False]&lt;/td&gt;
&lt;td&gt;Switch on/off the generation of the output database tiles.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--tile-image-size&lt;/td&gt;
&lt;td&gt;Set the tile maximum image size&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--tile-terrain-size&lt;/td&gt;
&lt;td&gt;Set the tile maximum terrain size&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-O&lt;/td&gt;
&lt;td&gt;string option to pass to write plugins, use &quot;&quot; for multiple options&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--subtile &amp;lt;LOD&amp;gt; &amp;lt;X&amp;gt; &amp;lt;Y&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the subtile to begin the build from.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--record-subtile-on-leaf-tiles&lt;/td&gt;
&lt;td&gt;Enable the setting of the subtile file name of the leaf tiles.&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--type-attribute&lt;/td&gt;
&lt;td&gt;Set the type name which specify how the shapes should be interpreted in shapefile/dbase files. (empty signifies no type attribute has been defined)&lt;/td&gt;
&lt;td&gt;NAME&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--height-attribute&lt;/td&gt;
&lt;td&gt;Set the attribute name for height attributes used in shapefile/dbase files.&lt;/td&gt;
&lt;td&gt;HGT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--height&lt;/td&gt;
&lt;td&gt;Set the height to use for associated shapefiles. (negative signifies that no height has been defined)&lt;/td&gt;
&lt;td&gt;-1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--mask&lt;/td&gt;
&lt;td&gt;Set the mask to assign indivual shapefile/model.&lt;/td&gt;
&lt;td&gt;0xffffffff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--terrain-mask&lt;/td&gt;
&lt;td&gt;Set the overall mask to assign terrain.&lt;/td&gt;
&lt;td&gt;0xffffffff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--read-threads-ratio &amp;lt;ratio&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the ratio number of read threads relative to number of cores to use.&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--write-threads-ratio &amp;lt;ratio&amp;gt;&lt;/td&gt;
&lt;td&gt;Set the ratio number of write threads relative to number of cores to use.&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--build-options &amp;lt;string&amp;gt;&lt;/td&gt;
&lt;td&gt;Set build options string.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;DEM interpolation&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--interpolate-terrain&lt;/td&gt;
&lt;td&gt;Enable the use of interpolation when sampling data from source DEMs. (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-interpolate-terrain&lt;/td&gt;
&lt;td&gt;Disable the use of interpolation when sampling data from source DEMs.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Imagery interpolation&lt;/em&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--interpolate-imagery&lt;/td&gt;
&lt;td&gt;Enable the use of interpolation when sampling data from source imagery. (default)&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--no-interpolate-imagery&lt;/td&gt;
&lt;td&gt;Disable the use of interpolation when sampling data from source imagery.&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content>
		<category term="Virtual Planet Builder" />
	</entry>
	<entry>
		<title>How to compress an existing database</title>
		<link rel="alternate" type="text/html" href="https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/118-how-to-compress-an-existing-database"/>
		<published>2013-02-15T01:45:52+00:00</published>
		<updated>2013-02-15T01:45:52+00:00</updated>
		<id>https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/118-how-to-compress-an-existing-database</id>
		<author>
			<name>openscenengraph</name>
			<email>jtorresfabra@gmail.com</email>
		</author>
		<summary type="html">&lt;div id=&quot;content&quot; class=&quot;wiki&quot;&gt;
&lt;div class=&quot;wikipage searchable&quot;&gt;
&lt;p id=&quot;Howtocompressanexistingdatabase&quot;&gt;Versions of OSG since around November 2008 support the compression of .ive files using the -O &quot;compressed&quot; writer option. I've tested the procedure on a 22GB database and the resulting database was reduced to 13GB.&lt;/p&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The idea behind this example is to take an existing database that was not built using compression and use &lt;strong&gt;osgconv&lt;/strong&gt; to compress each .ive file into a new database. This procedure is not needed if one creates the database with compression from the start by passing -O &quot;compressed&quot; to vpbmaster.&lt;/p&gt;
&lt;h3 id=&quot;Assumptions&quot;&gt;Assumptions&lt;/h3&gt;
&lt;p&gt;* Let &lt;strong&gt;old_db&lt;/strong&gt; = the root of the old database, i.e. the directory where the top-level .ive file is located.&lt;/p&gt;
&lt;p&gt;* Assume that the parent dir of &lt;strong&gt;old_db&lt;/strong&gt; is writable.&lt;/p&gt;
&lt;p&gt;* Let &lt;strong&gt;new_db&lt;/strong&gt; = the root of the new database. It would be a sibling of the &lt;strong&gt;old_db&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;* Using bash on Linux.&lt;/p&gt;
&lt;h3 id=&quot;Procedure&quot;&gt;Procedure&lt;/h3&gt;
&lt;p&gt;Turn off optimization&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;export OSG_OPTIMIZER=OFF
&lt;/pre&gt;
&lt;p&gt;Create a script to convert all .ive files in a given directory (reason later)&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd old_db
emacs conv_all_in_dir.sh
&lt;/pre&gt;
&lt;p&gt;Put the following in the script, edit as needed, comments inline&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;#!/bin/bash

# used with e.g.:
#find . -type d -exec ./conv_all_in_dir.sh {} \;

# the output root, edit as needed
OUT_ROOT=`pwd`/../new_db
#echo $OUT_ROOT

# 1st parameter is the directory we should process
IN_DIR=$1;
echo Changing to $IN_DIR
cd $IN_DIR

# find: find all ive files in this directory only, not subdirs
# sed: remove ./ in front of names
# xargs: run for every input file, start multiple processes (-P)
# osgconv -O &quot;compressed&quot;: make compressed ive files

find . -maxdepth 1 -name &quot;*.ive&quot; | sed -e s/&quot;\.\/&quot;// | xargs -P 2 -I {} osgconv {} $OUT_ROOT/$IN_DIR/{} -O &quot;compressed&quot;

&lt;/pre&gt;
&lt;p&gt;The script is passed a subdirectory of &lt;strong&gt;old_db&lt;/strong&gt;, it goes through that directory and converts all the .ive files and places them in the correct &lt;strong&gt;new_db&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;If you have a multi-core machine, adjust the -P parameter of xargs to suit.&lt;/p&gt;
&lt;p&gt;Make the script executable&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;chmod u+x ./conv_all_in_dir.sh
&lt;/pre&gt;
&lt;p&gt;Recreate the directory structure of the input database. &lt;strong&gt;osgconv&lt;/strong&gt; does not like to create directories.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;find . -type d -exec mkdir -p ../new_db/{} \;
&lt;/pre&gt;
&lt;p&gt;Now, go to each directory of old_db and convert all the .ive files into the proper directory of new_db.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;find . -type d -exec ./conv_all_in_dir.sh {} \;
&lt;/pre&gt;
&lt;p&gt;Wait...&lt;/p&gt;
&lt;h2 id=&quot;Reasonforcdbeforeosgconv&quot;&gt;Reason for cd before osgconv&lt;/h2&gt;
&lt;p&gt;For some reason &lt;strong&gt;osgconv&lt;/strong&gt; must be run with only the input file name, i.e. from the directory where the file is located. If it is run by passing not only the filename, but a whole path to the file, the links to files in other directories get corrupted somehow. When the links are broken, one can only open the database properly from a single directory, e.g.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd new_db
osgviewer terrain.ive
&lt;/pre&gt;
&lt;p&gt;would work, but&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd ..
osgviewer new_db/terrain.ive
&lt;/pre&gt;
&lt;p&gt;or execution from any other path would not.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
		<content type="html">&lt;div id=&quot;content&quot; class=&quot;wiki&quot;&gt;
&lt;div class=&quot;wikipage searchable&quot;&gt;
&lt;p id=&quot;Howtocompressanexistingdatabase&quot;&gt;Versions of OSG since around November 2008 support the compression of .ive files using the -O &quot;compressed&quot; writer option. I've tested the procedure on a 22GB database and the resulting database was reduced to 13GB.&lt;/p&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The idea behind this example is to take an existing database that was not built using compression and use &lt;strong&gt;osgconv&lt;/strong&gt; to compress each .ive file into a new database. This procedure is not needed if one creates the database with compression from the start by passing -O &quot;compressed&quot; to vpbmaster.&lt;/p&gt;
&lt;h3 id=&quot;Assumptions&quot;&gt;Assumptions&lt;/h3&gt;
&lt;p&gt;* Let &lt;strong&gt;old_db&lt;/strong&gt; = the root of the old database, i.e. the directory where the top-level .ive file is located.&lt;/p&gt;
&lt;p&gt;* Assume that the parent dir of &lt;strong&gt;old_db&lt;/strong&gt; is writable.&lt;/p&gt;
&lt;p&gt;* Let &lt;strong&gt;new_db&lt;/strong&gt; = the root of the new database. It would be a sibling of the &lt;strong&gt;old_db&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;* Using bash on Linux.&lt;/p&gt;
&lt;h3 id=&quot;Procedure&quot;&gt;Procedure&lt;/h3&gt;
&lt;p&gt;Turn off optimization&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;export OSG_OPTIMIZER=OFF
&lt;/pre&gt;
&lt;p&gt;Create a script to convert all .ive files in a given directory (reason later)&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd old_db
emacs conv_all_in_dir.sh
&lt;/pre&gt;
&lt;p&gt;Put the following in the script, edit as needed, comments inline&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;#!/bin/bash

# used with e.g.:
#find . -type d -exec ./conv_all_in_dir.sh {} \;

# the output root, edit as needed
OUT_ROOT=`pwd`/../new_db
#echo $OUT_ROOT

# 1st parameter is the directory we should process
IN_DIR=$1;
echo Changing to $IN_DIR
cd $IN_DIR

# find: find all ive files in this directory only, not subdirs
# sed: remove ./ in front of names
# xargs: run for every input file, start multiple processes (-P)
# osgconv -O &quot;compressed&quot;: make compressed ive files

find . -maxdepth 1 -name &quot;*.ive&quot; | sed -e s/&quot;\.\/&quot;// | xargs -P 2 -I {} osgconv {} $OUT_ROOT/$IN_DIR/{} -O &quot;compressed&quot;

&lt;/pre&gt;
&lt;p&gt;The script is passed a subdirectory of &lt;strong&gt;old_db&lt;/strong&gt;, it goes through that directory and converts all the .ive files and places them in the correct &lt;strong&gt;new_db&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;If you have a multi-core machine, adjust the -P parameter of xargs to suit.&lt;/p&gt;
&lt;p&gt;Make the script executable&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;chmod u+x ./conv_all_in_dir.sh
&lt;/pre&gt;
&lt;p&gt;Recreate the directory structure of the input database. &lt;strong&gt;osgconv&lt;/strong&gt; does not like to create directories.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;find . -type d -exec mkdir -p ../new_db/{} \;
&lt;/pre&gt;
&lt;p&gt;Now, go to each directory of old_db and convert all the .ive files into the proper directory of new_db.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;find . -type d -exec ./conv_all_in_dir.sh {} \;
&lt;/pre&gt;
&lt;p&gt;Wait...&lt;/p&gt;
&lt;h2 id=&quot;Reasonforcdbeforeosgconv&quot;&gt;Reason for cd before osgconv&lt;/h2&gt;
&lt;p&gt;For some reason &lt;strong&gt;osgconv&lt;/strong&gt; must be run with only the input file name, i.e. from the directory where the file is located. If it is run by passing not only the filename, but a whole path to the file, the links to files in other directories get corrupted somehow. When the links are broken, one can only open the database properly from a single directory, e.g.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd new_db
osgviewer terrain.ive
&lt;/pre&gt;
&lt;p&gt;would work, but&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd ..
osgviewer new_db/terrain.ive
&lt;/pre&gt;
&lt;p&gt;or execution from any other path would not.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
		<category term="Virtual Planet Builder" />
	</entry>
	<entry>
		<title>How to continue a canceled or failed vpbmaster rendering</title>
		<link rel="alternate" type="text/html" href="https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/122-how-to-continue-a-canceled-or-failed-vpbmaster-rendering"/>
		<published>2013-02-15T02:25:49+00:00</published>
		<updated>2013-02-15T02:25:49+00:00</updated>
		<id>https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/122-how-to-continue-a-canceled-or-failed-vpbmaster-rendering</id>
		<author>
			<name>Torben Dannhauer</name>
			<email>jtorresfabra@gmail.com</email>
		</author>
		<summary type="html">&lt;p&gt;Rendering large databases (0,7 TB raw data and more) often causes the operating system or any part of it to crash. While using 64 OS, the limit is pushed away, it is not solved.&lt;/p&gt;
&lt;h3 id=&quot;Virtualrenderingsetup&quot;&gt;Virtual rendering setup&lt;/h3&gt;
&lt;p&gt;Let us assume a virtual renderering setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You are using Kubuntu 9.10 64bit&lt;/li&gt;
&lt;li&gt;You are using OSG 2.9.5 and VPB 0.9.11&lt;/li&gt;
&lt;li&gt;Your working directory:
&lt;pre class=&quot;wiki&quot;&gt;/myWorkingDirectory
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your output diretory is:
&lt;pre class=&quot;wiki&quot;&gt;/myWorkingDirectory/output
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your sourcedata (dem and texture) resides in:
&lt;pre class=&quot;wiki&quot;&gt;/myWorkingDirectory/source/dem/
/myWorkingDirectory/source/orthophoto/
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your machinepool.txt is stored in your working directory and contains:
&lt;pre class=&quot;wiki&quot;&gt;Machine {
        hostname localhost
        processes 8
}

&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your compilescript &quot;compile.sh&quot; is stored in your working directory and contains:
&lt;pre class=&quot;wiki&quot;&gt;#!/bin/sh

vpbmaster --machines machinepool.txt\
 --notify-level ALWAYS\
 --geocentric\
 --terrain\
 --compressed\
 -d source/dem \
 -t source/orthophoto \
 -o output/terrain.ive
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Compileadataset&quot;&gt;Compile a dataset&lt;/h3&gt;
&lt;p&gt;Now, to compile your dataset using this script, type:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd /myWorkingDirectory
./compile.sh
&lt;/pre&gt;
&lt;p&gt;The vpbmaster now runs as usual, and creates the following folder an files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;logs - this directory contains the logfiles for each submitted task - a good place to search for the reasons why your tasks failed :).&lt;/li&gt;
&lt;li&gt;tasks - This directory contains all taskfiles with there status (pending or completed).&lt;/li&gt;
&lt;li&gt;build_master.source -This file contains all information you passed to vpbmaster via the commandline options.&lt;/li&gt;
&lt;li&gt;build_master.tasks - This file contains a list of all taskfiles in this compile project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your run is canceled, or due to OS reasons your tasks fail, you can restart your build process in three alternative ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just restart your compile.sh script - &lt;strong&gt;&lt;em&gt;THIS WILL OVERWRITE ALL ALREADY COMPILED DATA! &lt;/em&gt;&lt;/strong&gt; Or...&lt;/li&gt;
&lt;li&gt;Just restart vpbmaster with the created build_master.source via &lt;tt&gt;vpbmaster -s build_master.source&lt;/tt&gt;. - &lt;strong&gt;&lt;em&gt;THIS WILL OVERWRITE ALL ALREADY COMPILED DATA TOO! &lt;/em&gt;&lt;/strong&gt; Therefore....&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;underline&quot;&gt;Resume your Build&lt;/span&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Resumingabuildprocess&quot;&gt;Resuming a build process&lt;/h3&gt;
&lt;p&gt;To resume a build process, just go to your working directory and call vpbmaster with your specified task file list:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd /myWorkingDirectory
vpbmaster --tasks build_master.tasks
&lt;/pre&gt;
&lt;p&gt;Now vpbmaster does NOT build up a new tasklist and new taskfiles, but he just uses existing taskfiles and skips all tasks which are already finished.&lt;/p&gt;</summary>
		<content type="html">&lt;p&gt;Rendering large databases (0,7 TB raw data and more) often causes the operating system or any part of it to crash. While using 64 OS, the limit is pushed away, it is not solved.&lt;/p&gt;
&lt;h3 id=&quot;Virtualrenderingsetup&quot;&gt;Virtual rendering setup&lt;/h3&gt;
&lt;p&gt;Let us assume a virtual renderering setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You are using Kubuntu 9.10 64bit&lt;/li&gt;
&lt;li&gt;You are using OSG 2.9.5 and VPB 0.9.11&lt;/li&gt;
&lt;li&gt;Your working directory:
&lt;pre class=&quot;wiki&quot;&gt;/myWorkingDirectory
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your output diretory is:
&lt;pre class=&quot;wiki&quot;&gt;/myWorkingDirectory/output
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your sourcedata (dem and texture) resides in:
&lt;pre class=&quot;wiki&quot;&gt;/myWorkingDirectory/source/dem/
/myWorkingDirectory/source/orthophoto/
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your machinepool.txt is stored in your working directory and contains:
&lt;pre class=&quot;wiki&quot;&gt;Machine {
        hostname localhost
        processes 8
}

&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Your compilescript &quot;compile.sh&quot; is stored in your working directory and contains:
&lt;pre class=&quot;wiki&quot;&gt;#!/bin/sh

vpbmaster --machines machinepool.txt\
 --notify-level ALWAYS\
 --geocentric\
 --terrain\
 --compressed\
 -d source/dem \
 -t source/orthophoto \
 -o output/terrain.ive
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Compileadataset&quot;&gt;Compile a dataset&lt;/h3&gt;
&lt;p&gt;Now, to compile your dataset using this script, type:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd /myWorkingDirectory
./compile.sh
&lt;/pre&gt;
&lt;p&gt;The vpbmaster now runs as usual, and creates the following folder an files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;logs - this directory contains the logfiles for each submitted task - a good place to search for the reasons why your tasks failed :).&lt;/li&gt;
&lt;li&gt;tasks - This directory contains all taskfiles with there status (pending or completed).&lt;/li&gt;
&lt;li&gt;build_master.source -This file contains all information you passed to vpbmaster via the commandline options.&lt;/li&gt;
&lt;li&gt;build_master.tasks - This file contains a list of all taskfiles in this compile project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your run is canceled, or due to OS reasons your tasks fail, you can restart your build process in three alternative ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just restart your compile.sh script - &lt;strong&gt;&lt;em&gt;THIS WILL OVERWRITE ALL ALREADY COMPILED DATA! &lt;/em&gt;&lt;/strong&gt; Or...&lt;/li&gt;
&lt;li&gt;Just restart vpbmaster with the created build_master.source via &lt;tt&gt;vpbmaster -s build_master.source&lt;/tt&gt;. - &lt;strong&gt;&lt;em&gt;THIS WILL OVERWRITE ALL ALREADY COMPILED DATA TOO! &lt;/em&gt;&lt;/strong&gt; Therefore....&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;underline&quot;&gt;Resume your Build&lt;/span&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Resumingabuildprocess&quot;&gt;Resuming a build process&lt;/h3&gt;
&lt;p&gt;To resume a build process, just go to your working directory and call vpbmaster with your specified task file list:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd /myWorkingDirectory
vpbmaster --tasks build_master.tasks
&lt;/pre&gt;
&lt;p&gt;Now vpbmaster does NOT build up a new tasklist and new taskfiles, but he just uses existing taskfiles and skips all tasks which are already finished.&lt;/p&gt;</content>
		<category term="Virtual Planet Builder" />
	</entry>
	<entry>
		<title>How to extract dataset parts</title>
		<link rel="alternate" type="text/html" href="https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/117-how-to-extract-dataset-parts"/>
		<published>2013-02-14T20:56:17+00:00</published>
		<updated>2013-02-14T20:56:17+00:00</updated>
		<id>https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/117-how-to-extract-dataset-parts</id>
		<author>
			<name>Torben Dannhauer</name>
			<email>jtorresfabra@gmail.com</email>
		</author>
		<summary type="html">&lt;h3 id=&quot;SupportedOSGVersions&quot;&gt;Supported OSG Versions&lt;/h3&gt;
&lt;p&gt;Versions of OSG since February 10th 2012 (&amp;gt;3.0.1) support the caching of OSG models from local sources. This is required to follow this tutorial.&lt;/p&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The idea behind this example is to take an existing database that was built with VPB and use &lt;strong&gt;osgfilecache&lt;/strong&gt; to 'cache' the local terrain database to another local directory. osgfilecache supports level/extends limitation, so it is possible to extract only terrain within certain bounds or level of detail.&lt;/p&gt;
&lt;h3 id=&quot;Assumptions&quot;&gt;Assumptions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; Let &lt;strong&gt;/home/large_database&lt;/strong&gt; = the root of the original (large) database, i.e. the directory where the top-level .osgb file is located.&lt;/li&gt;
&lt;li&gt;Let &lt;strong&gt;/home/database_part&lt;/strong&gt; = the root of the destination database with limited extends. It should be writable to allow osgfilecache to write the files into it.&lt;/li&gt;
&lt;li&gt;The large source database root was called terrain.osgb (&lt;strong&gt;/home/large_database/terrain.osgb&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;The large source database was build in &lt;strong&gt;geocentric&lt;/strong&gt; mode.&lt;/li&gt;
&lt;li&gt;Using bash on Linux. Replacing the pathes it should be possible to follow the recipe also on windows. &lt;strong&gt;Be aware of he limited NTFS performance and stability if you try to extract giga-/terabyte size datasets''' &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Procedure&quot;&gt;Procedure&lt;/h3&gt;
&lt;p&gt;One note before we start with the commands: pagedLOD nodes store the database path, which is the path to the file. This path is overwritten by osgfilecache. To get a independent new sub database with relative paths, you mast enter the directory of the large source terrain database before you invoke osgfilecache. Otherwise you will get a terrain dataset with absolute paths which will cause OSG to continue loading from the original database instead from the extracted limited dataset.&lt;/p&gt;
&lt;p&gt;Enter the source terrain dataset&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd /home/large_database
&lt;/pre&gt;
&lt;p&gt;The command structure is 'osgfilecache --file-cache &amp;lt;your destination folder&amp;gt; &amp;lt;options to control the new database extents&amp;gt; &amp;lt;relative path to your source database root file&amp;gt; For example for the above assumptions, it would be the following to extract the database until LOD level 3 ('-l 3'):&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;osgfilecache --file-cache /home/database_part -l 3 ./terrain.osgb
&lt;/pre&gt;
&lt;p&gt;According to the osgfielcache help, the following extend definitions are allowed:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt; -e level minX minY maxX maxY                                                  
                    Read down to &amp;lt;level&amp;gt; across the extents minX, minY to maxY,
                    maxY.  Note, for geocentric datase X and Y are longitude and
                    latitude respectively.
  -l level          Read down to level across the whole database.

&lt;/pre&gt;
&lt;h3 id=&quot;Example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;To extract lon 11-15 and lat 30-40 until level 8:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;osgfilecache --file-cache /home/torben/test -e 8 11 30 15 40 ./terrain.osgb
&lt;/pre&gt;
&lt;h3 id=&quot;Advancedusage&quot;&gt;Advanced usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note: You can run osgfilecache multiple times in the same directory to 'compose' a new database with different extends. E.g. worldwide&amp;lt;=level 5, europe&amp;lt;=level 8 and germany&amp;lt;=level 25&lt;/strong&gt;&lt;/p&gt;</summary>
		<content type="html">&lt;h3 id=&quot;SupportedOSGVersions&quot;&gt;Supported OSG Versions&lt;/h3&gt;
&lt;p&gt;Versions of OSG since February 10th 2012 (&amp;gt;3.0.1) support the caching of OSG models from local sources. This is required to follow this tutorial.&lt;/p&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The idea behind this example is to take an existing database that was built with VPB and use &lt;strong&gt;osgfilecache&lt;/strong&gt; to 'cache' the local terrain database to another local directory. osgfilecache supports level/extends limitation, so it is possible to extract only terrain within certain bounds or level of detail.&lt;/p&gt;
&lt;h3 id=&quot;Assumptions&quot;&gt;Assumptions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; Let &lt;strong&gt;/home/large_database&lt;/strong&gt; = the root of the original (large) database, i.e. the directory where the top-level .osgb file is located.&lt;/li&gt;
&lt;li&gt;Let &lt;strong&gt;/home/database_part&lt;/strong&gt; = the root of the destination database with limited extends. It should be writable to allow osgfilecache to write the files into it.&lt;/li&gt;
&lt;li&gt;The large source database root was called terrain.osgb (&lt;strong&gt;/home/large_database/terrain.osgb&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;The large source database was build in &lt;strong&gt;geocentric&lt;/strong&gt; mode.&lt;/li&gt;
&lt;li&gt;Using bash on Linux. Replacing the pathes it should be possible to follow the recipe also on windows. &lt;strong&gt;Be aware of he limited NTFS performance and stability if you try to extract giga-/terabyte size datasets''' &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Procedure&quot;&gt;Procedure&lt;/h3&gt;
&lt;p&gt;One note before we start with the commands: pagedLOD nodes store the database path, which is the path to the file. This path is overwritten by osgfilecache. To get a independent new sub database with relative paths, you mast enter the directory of the large source terrain database before you invoke osgfilecache. Otherwise you will get a terrain dataset with absolute paths which will cause OSG to continue loading from the original database instead from the extracted limited dataset.&lt;/p&gt;
&lt;p&gt;Enter the source terrain dataset&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;cd /home/large_database
&lt;/pre&gt;
&lt;p&gt;The command structure is 'osgfilecache --file-cache &amp;lt;your destination folder&amp;gt; &amp;lt;options to control the new database extents&amp;gt; &amp;lt;relative path to your source database root file&amp;gt; For example for the above assumptions, it would be the following to extract the database until LOD level 3 ('-l 3'):&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;osgfilecache --file-cache /home/database_part -l 3 ./terrain.osgb
&lt;/pre&gt;
&lt;p&gt;According to the osgfielcache help, the following extend definitions are allowed:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt; -e level minX minY maxX maxY                                                  
                    Read down to &amp;lt;level&amp;gt; across the extents minX, minY to maxY,
                    maxY.  Note, for geocentric datase X and Y are longitude and
                    latitude respectively.
  -l level          Read down to level across the whole database.

&lt;/pre&gt;
&lt;h3 id=&quot;Example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;To extract lon 11-15 and lat 30-40 until level 8:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;osgfilecache --file-cache /home/torben/test -e 8 11 30 15 40 ./terrain.osgb
&lt;/pre&gt;
&lt;h3 id=&quot;Advancedusage&quot;&gt;Advanced usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note: You can run osgfilecache multiple times in the same directory to 'compose' a new database with different extends. E.g. worldwide&amp;lt;=level 5, europe&amp;lt;=level 8 and germany&amp;lt;=level 25&lt;/strong&gt;&lt;/p&gt;</content>
		<category term="Virtual Planet Builder" />
	</entry>
	<entry>
		<title>How to patch an existing database</title>
		<link rel="alternate" type="text/html" href="https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/121-how-to-patch-an-existing-database"/>
		<published>2013-02-15T02:15:20+00:00</published>
		<updated>2013-02-15T02:15:20+00:00</updated>
		<id>https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/121-how-to-patch-an-existing-database</id>
		<author>
			<name>openscenegraph</name>
			<email>jtorresfabra@gmail.com</email>
		</author>
		<summary type="html">&lt;div id=&quot;content&quot; class=&quot;wiki&quot;&gt;
&lt;div class=&quot;wikipage searchable&quot;&gt;
&lt;p id=&quot;Howtopatchanexistingdatabase&quot;&gt;Versions of VPB since around June 2009 support patching of existing .ive database using the --patch option. This options has not been commented right now but we infer it from the source code. We've tested the procedure on different cases and it seems to work fine.&lt;/p&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The idea behind this example is to take an existing database and add raster/elevation data to update it with patches of higher resolution.&lt;/p&gt;
&lt;h3 id=&quot;Assumptions&quot;&gt;Assumptions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Let &lt;strong&gt;old_db.ive&lt;/strong&gt; = the root of the old database, i.e. the path where the top-level .ive file is located.&lt;/li&gt;
&lt;li&gt;Let &lt;strong&gt;new_db_raster.tif&lt;/strong&gt; = a new raster data to be added to the old database.&lt;/li&gt;
&lt;li&gt;Let &lt;strong&gt;new_db_dem.tif&lt;/strong&gt; = a new elevation data to be added to the old database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Procedure&quot;&gt;Procedure&lt;/h3&gt;
&lt;p&gt;Use the following command line :&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;vpbmaster^
 --patch old_db.ive^
 --levels 12 16 -t new_db_raster.tif^
 --levels 12 16 -d new_db_dem.tif
&lt;/pre&gt;
&lt;p&gt;If you don't specify the levels where the patch should appear, then it will always be visible on top of the underlying database. Other options will be kept from the old database construction by VPB.&lt;/p&gt;
&lt;h3 id=&quot;Remarks&quot;&gt;Remarks&lt;/h3&gt;
&lt;p&gt;For some reason the original source files used to produce the old database should be kept along with it while patching, otherwise VPB will claim about missing files. However, if you provide VPB with relative file names at construction it seems that you can move the original files and the database together.&lt;/p&gt;
&lt;p&gt;We also recommand to create a root directory containing the database. Indeed, VPB will create revision files (.source, .revision, .added) along with the root ive files. These files must be kept in order to patch the database afterwards.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;vpbmaster^
 -t world_A1.tif^
 -t world_A2.tif^
 -t world_A3.tif^
 -t world_A4.tif^
 -d gtopo90.tif^
 --mip-mapping-hardware^
 --geocentric^
 --terrain^
 --RGB-24^
 -l 16^
 -O &quot;compressImageData JPEG_QUALITY 75&quot;^
 -o World450m/world450m.ive
&lt;/pre&gt;
&lt;p&gt;Here you will be able to move the tif files and the World450m root directory together to another location for patching.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
		<content type="html">&lt;div id=&quot;content&quot; class=&quot;wiki&quot;&gt;
&lt;div class=&quot;wikipage searchable&quot;&gt;
&lt;p id=&quot;Howtopatchanexistingdatabase&quot;&gt;Versions of VPB since around June 2009 support patching of existing .ive database using the --patch option. This options has not been commented right now but we infer it from the source code. We've tested the procedure on different cases and it seems to work fine.&lt;/p&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The idea behind this example is to take an existing database and add raster/elevation data to update it with patches of higher resolution.&lt;/p&gt;
&lt;h3 id=&quot;Assumptions&quot;&gt;Assumptions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Let &lt;strong&gt;old_db.ive&lt;/strong&gt; = the root of the old database, i.e. the path where the top-level .ive file is located.&lt;/li&gt;
&lt;li&gt;Let &lt;strong&gt;new_db_raster.tif&lt;/strong&gt; = a new raster data to be added to the old database.&lt;/li&gt;
&lt;li&gt;Let &lt;strong&gt;new_db_dem.tif&lt;/strong&gt; = a new elevation data to be added to the old database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Procedure&quot;&gt;Procedure&lt;/h3&gt;
&lt;p&gt;Use the following command line :&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;vpbmaster^
 --patch old_db.ive^
 --levels 12 16 -t new_db_raster.tif^
 --levels 12 16 -d new_db_dem.tif
&lt;/pre&gt;
&lt;p&gt;If you don't specify the levels where the patch should appear, then it will always be visible on top of the underlying database. Other options will be kept from the old database construction by VPB.&lt;/p&gt;
&lt;h3 id=&quot;Remarks&quot;&gt;Remarks&lt;/h3&gt;
&lt;p&gt;For some reason the original source files used to produce the old database should be kept along with it while patching, otherwise VPB will claim about missing files. However, if you provide VPB with relative file names at construction it seems that you can move the original files and the database together.&lt;/p&gt;
&lt;p&gt;We also recommand to create a root directory containing the database. Indeed, VPB will create revision files (.source, .revision, .added) along with the root ive files. These files must be kept in order to patch the database afterwards.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;vpbmaster^
 -t world_A1.tif^
 -t world_A2.tif^
 -t world_A3.tif^
 -t world_A4.tif^
 -d gtopo90.tif^
 --mip-mapping-hardware^
 --geocentric^
 --terrain^
 --RGB-24^
 -l 16^
 -O &quot;compressImageData JPEG_QUALITY 75&quot;^
 -o World450m/world450m.ive
&lt;/pre&gt;
&lt;p&gt;Here you will be able to move the tif files and the World450m root directory together to another location for patching.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
		<category term="Virtual Planet Builder" />
	</entry>
	<entry>
		<title>VirtualPlanetBuilder on a Single System Image (SSI) Cluster Example</title>
		<link rel="alternate" type="text/html" href="https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/120-virtualplanetbuilder-on-a-single-system-image-ssi-cluster-example"/>
		<published>2013-02-15T02:12:03+00:00</published>
		<updated>2013-02-15T02:12:03+00:00</updated>
		<id>https://www.openscenegraph.com/index.php/documentation/tools/virtual-planet-builder/120-virtualplanetbuilder-on-a-single-system-image-ssi-cluster-example</id>
		<author>
			<name>J.P. Delport</name>
			<email>jtorresfabra@gmail.com</email>
		</author>
		<summary type="html">&lt;p id=&quot;VirtualPlanetBuilderonaSingleSystemImageSSIClusterExample&quot;&gt;This page briefly describes the setup and procedure used to generated a large terrain database on a cluster of 8 nodes. This is definitely not the only way to use VirtualPlanetBuilder, but serves as a specific example.&lt;/p&gt;
&lt;p&gt;I used OpenSceneGraph (rev 8413) and VirtualPlanetBuilder (rev 914) checked out from svn around June 2008.&lt;/p&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;This section describes some aspects of the cluster setup that are related to running VirtualPlanetBuilder.&lt;/p&gt;
&lt;h4 id=&quot;PasswordlessSSH&quot;&gt;Passwordless SSH&lt;/h4&gt;
&lt;p&gt;VirtualPlanetBuilder by default uses &lt;strong&gt;ssh&lt;/strong&gt; to execute &lt;strong&gt;osgdem&lt;/strong&gt; commands on the compute nodes. You should therefore setup &lt;strong&gt;ssh&lt;/strong&gt; so that the user that will run the &lt;strong&gt;vpbmaster&lt;/strong&gt; command can login to the other machines without a password. I used public/private key pairs to do this. Consult Google for detailed instructions.&lt;/p&gt;
&lt;p&gt;If all is setup correctly, you should be able to login from the node where you will run &lt;strong&gt;vpbmaster&lt;/strong&gt; to any other node without a password, e.g.:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ ssh node01
Linux node01 2.6.24 #1 SMP Wed Jul 9 16:58:57 SAST 2008 i686
Last login: Sat Jul 19 11:52:59 2008 from rootnode
jpd@node01:~$
&lt;/pre&gt;
&lt;h4 id=&quot;XServeronNodes&quot;&gt;X Server on Nodes&lt;/h4&gt;
&lt;p&gt;When &lt;strong&gt;osgdem&lt;/strong&gt; executes on the compute nodes, it tries to open a window on display &lt;strong&gt;:0.0&lt;/strong&gt;. An X server must therefore be running on the node (the first server on most Linux distros should default to :0.0). It is important to log in to the server. All the nodes in this example had an NVidia graphics card with the 169.12 driver installed.&lt;/p&gt;
&lt;p&gt;To test if everything is working correctly, do something like the following:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ ssh node01 &quot;export DISPLAY=:0.0 ; xeyes&quot;
&lt;/pre&gt;
&lt;p&gt;The &lt;strong&gt;xeyes&lt;/strong&gt; application should run and display its window on node01's X server.&lt;/p&gt;
&lt;h4 id=&quot;DataDirectories&quot;&gt;Data Directories&lt;/h4&gt;
&lt;p&gt;All nodes that will participate in the terrain building need to have access to the input data (readable) as well as access to a directory to store the output files (writable). In this example I will assume that a directory called &quot;/glusterfs&quot; is visible from all machines and is writable.&lt;/p&gt;
&lt;p&gt;The following should for example display the same listing:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ ls /glusterfs
jpd@rootnode:~$ ssh node05 &quot;ls /glusterfs&quot;
&lt;/pre&gt;
&lt;h3 id=&quot;VPBSetup&quot;&gt;VPB Setup&lt;/h3&gt;
&lt;h4 id=&quot;DataReprojectionandTranslation&quot;&gt;Data Reprojection and Translation&lt;/h4&gt;
&lt;p&gt;VirtualPlanetBuilder seems happiest when all input data uses the same projection and datum. It is also a good idea to reproject the input data so that it can be used in future VirtualPlanetBuilder runs (yes, you will run it more than once ;).&lt;/p&gt;
&lt;p&gt;For this example I used latlong and WGS84 for all the files and also converted everything to GeoTiff format. The following shows how I converted the stunning Blue Marble Next Generation (BMNG) data I downloaded from &lt;a class=&quot;ext-link&quot; href=&quot;http://mirrors.arsc.edu/nasa/world_500m/&quot;&gt;&lt;span class=&quot;icon&quot;&gt;here&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr -180 90 -90   0 world.topo.bathy.200407.3x21600x21600.A1.jpg A1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr -90  90   0   0 world.topo.bathy.200407.3x21600x21600.B1.jpg B1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr   0  90  90   0 world.topo.bathy.200407.3x21600x21600.C1.jpg C1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr  90  90 180   0 world.topo.bathy.200407.3x21600x21600.D1.jpg D1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr -180  0 -90 -90 world.topo.bathy.200407.3x21600x21600.A2.jpg A2.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr  -90  0   0 -90 world.topo.bathy.200407.3x21600x21600.B2.jpg B2.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr    0  0  90 -90 world.topo.bathy.200407.3x21600x21600.C2.jpg C2.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr   90  0 180 -90 world.topo.bathy.200407.3x21600x21600.D2.jpg D2.tif
&lt;/pre&gt;
&lt;p&gt;For most data that already has projection data included, the following command seemed to work:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;gdalwarp -t_srs &quot;+proj=latlong +datum=WGS84&quot; -r bilinear $name ../reprojected/$newname
&lt;/pre&gt;
&lt;p&gt;I usually place all reprojected data into separate directories that group them by layer. E.g. the converted BMNG tif files would be placed in a directory called &quot;/glusterfs/BMNG&quot;.&lt;/p&gt;
&lt;h4 id=&quot;MachinePoolFile&quot;&gt;Machine Pool File&lt;/h4&gt;
&lt;p&gt;VirtualPlanetBuilder uses an input file to describe the list of machines that will be used during the build. Below is the simple one I used, called &lt;strong&gt;machinepool.txt&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;Machine {
	hostname node01
	processes 1
}
Machine {
	hostname node02
	processes 1
}
Machine {
	hostname node03
	processes 1
}
Machine {
	hostname node04
	processes 1
}
Machine {
	hostname node05
	processes 1
}
Machine {
	hostname node06
	processes 1
}
Machine {
	hostname node07
	processes 1
}
Machine {
	hostname node08
	processes 1
}
&lt;/pre&gt;
&lt;p&gt;The names specified in the file should be the names that are reachable using &lt;strong&gt;ssh&lt;/strong&gt;. If you have multiple cores per machine with enough memory, you could try increasing the processes.&lt;/p&gt;
&lt;h3 id=&quot;CommandLine&quot;&gt;Command Line&lt;/h3&gt;
&lt;p&gt;Below is the command line that I used (all should be on one line when executing without the // comments):&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;vpbmaster --machines machinepool.txt                // Use the machine pool file described earlier
          --geocentric                              // I want a geocentric database
          -d /glusterfs/DTED                        // My elevation data can be found here (the directory contains only tifs)
          --layer 0 -t /glusterfs/BMNG              // On texture layer 0 I want the BMNG data
          --layer 0 -t /glusterfs/SPOT_reproj       // as well as some nice satellite photos
          --layer 1 -t /glusterfs/Maps_reproj       // On Layer 1 I want some 1:50000 scale maps
          --terrain --compressed                    // Use the new terrain format and compress the texture data
          -o spot_maps/terrain.ive                  // Put the output files under this directory
&lt;/pre&gt;
&lt;p&gt;The command was executed from the master node in a directory that is visible to all nodes:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ cd /glusterfs/generate
&lt;/pre&gt;
&lt;p&gt;That's it. The &lt;strong&gt;vpbmaster&lt;/strong&gt; command created 473 tasks and after 50 hours of processing created 1.5 million files with a total size of 487GB.&lt;/p&gt;
&lt;p&gt;Below is a snippet of the output:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;End of run: tasksPending=0 taskCompleted=473 taskRunning=0 tasksFailed=0
MachinePool::reportTimingStats()
    Machine : node01
        Task::type=''   minTime=616.267390      maxTime=5068.351865     averageTime=2751.044383 totalComputeTime=181568.929248  numTasks=66
    Machine : node02
        Task::type=''   minTime=761.555931      maxTime=25294.378808    averageTime=4027.837882 totalComputeTime=181252.704694  numTasks=45
    Machine : node03
        Task::type=''   minTime=702.828047      maxTime=4933.171209     averageTime=2936.182243 totalComputeTime=179107.116819  numTasks=61
    Machine : node04
        Task::type=''   minTime=605.509313      maxTime=5256.497770     averageTime=2794.609616 totalComputeTime=178855.015440  numTasks=64
    Machine : node05
        Task::type=''   minTime=704.703147      maxTime=5562.438701     averageTime=3005.987053 totalComputeTime=180359.223195  numTasks=60
    Machine : node06
        Task::type=''   minTime=658.961472      maxTime=10080.521703    averageTime=3329.892155 totalComputeTime=179814.176365  numTasks=54
    Machine : node07
        Task::type=''   minTime=702.050721      maxTime=5662.709409     averageTime=3052.297707 totalComputeTime=180085.564685  numTasks=59
    Machine : node08
        Task::type=''   minTime=703.251535      maxTime=5755.713908     averageTime=2803.070356 totalComputeTime=179396.502756  numTasks=64
Finished run successfully.
Total elapsed time = 181923.496816
&lt;/pre&gt;
&lt;h3 id=&quot;ClusterOverview&quot;&gt;Cluster Overview&lt;/h3&gt;
&lt;p&gt;The cluster used in this example consists of 9 machines connected using Gigabit Ethernet. The master (root) node contains all applications on its filesystem. The 8 other nodes are identical machines that boot over the network using NFS as their root filesystems. All nodes have NVidia 6 series PCI-Express graphics cards.&lt;/p&gt;
&lt;p&gt;All nodes run Debian Lenny. By virtue of using the same NFS mount, all client nodes have identical software installed.&lt;/p&gt;
&lt;p&gt;The 8 client nodes have a 500GB disk each. The disks are pooled into one large 4TB filesystem using the excellent &lt;a class=&quot;ext-link&quot; href=&quot;http://www.gluster.org/&quot;&gt;&lt;span class=&quot;icon&quot;&gt;GlusterFS&lt;/span&gt;&lt;/a&gt;. By mounting the GlusterFS filesystem from all nodes, they all see the exact same data.&lt;/p&gt;
&lt;h3&gt;Misc Tips&lt;/h3&gt;
&lt;p&gt; Use &lt;strong&gt;GNU screen&lt;/strong&gt; to start the &lt;strong&gt;vpbmaster&lt;/strong&gt; command. You can then monitor the progress over the network and save the command line output to review later.&lt;/p&gt;
&lt;p&gt; &lt;a class=&quot;ext-link&quot; href=&quot;http://gridengine.sunsource.net/&quot;&gt;&lt;span class=&quot;icon&quot;&gt;Sun Grid Engine&lt;/span&gt;&lt;/a&gt; makes reprojecting hundreds of files in parallel easier. You just submit the whole batch at once using &lt;strong&gt;find -exec&lt;/strong&gt; and a simple script.&lt;/p&gt;
&lt;p&gt; Since &lt;strong&gt;ssh&lt;/strong&gt; to all nodes is set up already, install &lt;strong&gt;dsh&lt;/strong&gt; (distributed shell) on the root node. Running a single command on all nodes then become as easy as:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;dsh -a &quot;ls /glusterfs&quot;
&lt;/pre&gt;
&lt;p&gt;Using GNU/Linux and OpenSceneGraph is fun.&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</summary>
		<content type="html">&lt;p id=&quot;VirtualPlanetBuilderonaSingleSystemImageSSIClusterExample&quot;&gt;This page briefly describes the setup and procedure used to generated a large terrain database on a cluster of 8 nodes. This is definitely not the only way to use VirtualPlanetBuilder, but serves as a specific example.&lt;/p&gt;
&lt;p&gt;I used OpenSceneGraph (rev 8413) and VirtualPlanetBuilder (rev 914) checked out from svn around June 2008.&lt;/p&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;This section describes some aspects of the cluster setup that are related to running VirtualPlanetBuilder.&lt;/p&gt;
&lt;h4 id=&quot;PasswordlessSSH&quot;&gt;Passwordless SSH&lt;/h4&gt;
&lt;p&gt;VirtualPlanetBuilder by default uses &lt;strong&gt;ssh&lt;/strong&gt; to execute &lt;strong&gt;osgdem&lt;/strong&gt; commands on the compute nodes. You should therefore setup &lt;strong&gt;ssh&lt;/strong&gt; so that the user that will run the &lt;strong&gt;vpbmaster&lt;/strong&gt; command can login to the other machines without a password. I used public/private key pairs to do this. Consult Google for detailed instructions.&lt;/p&gt;
&lt;p&gt;If all is setup correctly, you should be able to login from the node where you will run &lt;strong&gt;vpbmaster&lt;/strong&gt; to any other node without a password, e.g.:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ ssh node01
Linux node01 2.6.24 #1 SMP Wed Jul 9 16:58:57 SAST 2008 i686
Last login: Sat Jul 19 11:52:59 2008 from rootnode
jpd@node01:~$
&lt;/pre&gt;
&lt;h4 id=&quot;XServeronNodes&quot;&gt;X Server on Nodes&lt;/h4&gt;
&lt;p&gt;When &lt;strong&gt;osgdem&lt;/strong&gt; executes on the compute nodes, it tries to open a window on display &lt;strong&gt;:0.0&lt;/strong&gt;. An X server must therefore be running on the node (the first server on most Linux distros should default to :0.0). It is important to log in to the server. All the nodes in this example had an NVidia graphics card with the 169.12 driver installed.&lt;/p&gt;
&lt;p&gt;To test if everything is working correctly, do something like the following:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ ssh node01 &quot;export DISPLAY=:0.0 ; xeyes&quot;
&lt;/pre&gt;
&lt;p&gt;The &lt;strong&gt;xeyes&lt;/strong&gt; application should run and display its window on node01's X server.&lt;/p&gt;
&lt;h4 id=&quot;DataDirectories&quot;&gt;Data Directories&lt;/h4&gt;
&lt;p&gt;All nodes that will participate in the terrain building need to have access to the input data (readable) as well as access to a directory to store the output files (writable). In this example I will assume that a directory called &quot;/glusterfs&quot; is visible from all machines and is writable.&lt;/p&gt;
&lt;p&gt;The following should for example display the same listing:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ ls /glusterfs
jpd@rootnode:~$ ssh node05 &quot;ls /glusterfs&quot;
&lt;/pre&gt;
&lt;h3 id=&quot;VPBSetup&quot;&gt;VPB Setup&lt;/h3&gt;
&lt;h4 id=&quot;DataReprojectionandTranslation&quot;&gt;Data Reprojection and Translation&lt;/h4&gt;
&lt;p&gt;VirtualPlanetBuilder seems happiest when all input data uses the same projection and datum. It is also a good idea to reproject the input data so that it can be used in future VirtualPlanetBuilder runs (yes, you will run it more than once ;).&lt;/p&gt;
&lt;p&gt;For this example I used latlong and WGS84 for all the files and also converted everything to GeoTiff format. The following shows how I converted the stunning Blue Marble Next Generation (BMNG) data I downloaded from &lt;a class=&quot;ext-link&quot; href=&quot;http://mirrors.arsc.edu/nasa/world_500m/&quot;&gt;&lt;span class=&quot;icon&quot;&gt;here&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr -180 90 -90   0 world.topo.bathy.200407.3x21600x21600.A1.jpg A1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr -90  90   0   0 world.topo.bathy.200407.3x21600x21600.B1.jpg B1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr   0  90  90   0 world.topo.bathy.200407.3x21600x21600.C1.jpg C1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr  90  90 180   0 world.topo.bathy.200407.3x21600x21600.D1.jpg D1.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr -180  0 -90 -90 world.topo.bathy.200407.3x21600x21600.A2.jpg A2.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr  -90  0   0 -90 world.topo.bathy.200407.3x21600x21600.B2.jpg B2.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr    0  0  90 -90 world.topo.bathy.200407.3x21600x21600.C2.jpg C2.tif
gdal_translate -of GTiff -a_srs &quot;+proj=latlong +datum=WGS84&quot; -a_ullr   90  0 180 -90 world.topo.bathy.200407.3x21600x21600.D2.jpg D2.tif
&lt;/pre&gt;
&lt;p&gt;For most data that already has projection data included, the following command seemed to work:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;gdalwarp -t_srs &quot;+proj=latlong +datum=WGS84&quot; -r bilinear $name ../reprojected/$newname
&lt;/pre&gt;
&lt;p&gt;I usually place all reprojected data into separate directories that group them by layer. E.g. the converted BMNG tif files would be placed in a directory called &quot;/glusterfs/BMNG&quot;.&lt;/p&gt;
&lt;h4 id=&quot;MachinePoolFile&quot;&gt;Machine Pool File&lt;/h4&gt;
&lt;p&gt;VirtualPlanetBuilder uses an input file to describe the list of machines that will be used during the build. Below is the simple one I used, called &lt;strong&gt;machinepool.txt&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;Machine {
	hostname node01
	processes 1
}
Machine {
	hostname node02
	processes 1
}
Machine {
	hostname node03
	processes 1
}
Machine {
	hostname node04
	processes 1
}
Machine {
	hostname node05
	processes 1
}
Machine {
	hostname node06
	processes 1
}
Machine {
	hostname node07
	processes 1
}
Machine {
	hostname node08
	processes 1
}
&lt;/pre&gt;
&lt;p&gt;The names specified in the file should be the names that are reachable using &lt;strong&gt;ssh&lt;/strong&gt;. If you have multiple cores per machine with enough memory, you could try increasing the processes.&lt;/p&gt;
&lt;h3 id=&quot;CommandLine&quot;&gt;Command Line&lt;/h3&gt;
&lt;p&gt;Below is the command line that I used (all should be on one line when executing without the // comments):&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;vpbmaster --machines machinepool.txt                // Use the machine pool file described earlier
          --geocentric                              // I want a geocentric database
          -d /glusterfs/DTED                        // My elevation data can be found here (the directory contains only tifs)
          --layer 0 -t /glusterfs/BMNG              // On texture layer 0 I want the BMNG data
          --layer 0 -t /glusterfs/SPOT_reproj       // as well as some nice satellite photos
          --layer 1 -t /glusterfs/Maps_reproj       // On Layer 1 I want some 1:50000 scale maps
          --terrain --compressed                    // Use the new terrain format and compress the texture data
          -o spot_maps/terrain.ive                  // Put the output files under this directory
&lt;/pre&gt;
&lt;p&gt;The command was executed from the master node in a directory that is visible to all nodes:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;jpd@rootnode:~$ cd /glusterfs/generate
&lt;/pre&gt;
&lt;p&gt;That's it. The &lt;strong&gt;vpbmaster&lt;/strong&gt; command created 473 tasks and after 50 hours of processing created 1.5 million files with a total size of 487GB.&lt;/p&gt;
&lt;p&gt;Below is a snippet of the output:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;End of run: tasksPending=0 taskCompleted=473 taskRunning=0 tasksFailed=0
MachinePool::reportTimingStats()
    Machine : node01
        Task::type=''   minTime=616.267390      maxTime=5068.351865     averageTime=2751.044383 totalComputeTime=181568.929248  numTasks=66
    Machine : node02
        Task::type=''   minTime=761.555931      maxTime=25294.378808    averageTime=4027.837882 totalComputeTime=181252.704694  numTasks=45
    Machine : node03
        Task::type=''   minTime=702.828047      maxTime=4933.171209     averageTime=2936.182243 totalComputeTime=179107.116819  numTasks=61
    Machine : node04
        Task::type=''   minTime=605.509313      maxTime=5256.497770     averageTime=2794.609616 totalComputeTime=178855.015440  numTasks=64
    Machine : node05
        Task::type=''   minTime=704.703147      maxTime=5562.438701     averageTime=3005.987053 totalComputeTime=180359.223195  numTasks=60
    Machine : node06
        Task::type=''   minTime=658.961472      maxTime=10080.521703    averageTime=3329.892155 totalComputeTime=179814.176365  numTasks=54
    Machine : node07
        Task::type=''   minTime=702.050721      maxTime=5662.709409     averageTime=3052.297707 totalComputeTime=180085.564685  numTasks=59
    Machine : node08
        Task::type=''   minTime=703.251535      maxTime=5755.713908     averageTime=2803.070356 totalComputeTime=179396.502756  numTasks=64
Finished run successfully.
Total elapsed time = 181923.496816
&lt;/pre&gt;
&lt;h3 id=&quot;ClusterOverview&quot;&gt;Cluster Overview&lt;/h3&gt;
&lt;p&gt;The cluster used in this example consists of 9 machines connected using Gigabit Ethernet. The master (root) node contains all applications on its filesystem. The 8 other nodes are identical machines that boot over the network using NFS as their root filesystems. All nodes have NVidia 6 series PCI-Express graphics cards.&lt;/p&gt;
&lt;p&gt;All nodes run Debian Lenny. By virtue of using the same NFS mount, all client nodes have identical software installed.&lt;/p&gt;
&lt;p&gt;The 8 client nodes have a 500GB disk each. The disks are pooled into one large 4TB filesystem using the excellent &lt;a class=&quot;ext-link&quot; href=&quot;http://www.gluster.org/&quot;&gt;&lt;span class=&quot;icon&quot;&gt;GlusterFS&lt;/span&gt;&lt;/a&gt;. By mounting the GlusterFS filesystem from all nodes, they all see the exact same data.&lt;/p&gt;
&lt;h3&gt;Misc Tips&lt;/h3&gt;
&lt;p&gt; Use &lt;strong&gt;GNU screen&lt;/strong&gt; to start the &lt;strong&gt;vpbmaster&lt;/strong&gt; command. You can then monitor the progress over the network and save the command line output to review later.&lt;/p&gt;
&lt;p&gt; &lt;a class=&quot;ext-link&quot; href=&quot;http://gridengine.sunsource.net/&quot;&gt;&lt;span class=&quot;icon&quot;&gt;Sun Grid Engine&lt;/span&gt;&lt;/a&gt; makes reprojecting hundreds of files in parallel easier. You just submit the whole batch at once using &lt;strong&gt;find -exec&lt;/strong&gt; and a simple script.&lt;/p&gt;
&lt;p&gt; Since &lt;strong&gt;ssh&lt;/strong&gt; to all nodes is set up already, install &lt;strong&gt;dsh&lt;/strong&gt; (distributed shell) on the root node. Running a single command on all nodes then become as easy as:&lt;/p&gt;
&lt;pre class=&quot;wiki&quot;&gt;dsh -a &quot;ls /glusterfs&quot;
&lt;/pre&gt;
&lt;p&gt;Using GNU/Linux and OpenSceneGraph is fun.&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</content>
		<category term="Virtual Planet Builder" />
	</entry>
</feed>
